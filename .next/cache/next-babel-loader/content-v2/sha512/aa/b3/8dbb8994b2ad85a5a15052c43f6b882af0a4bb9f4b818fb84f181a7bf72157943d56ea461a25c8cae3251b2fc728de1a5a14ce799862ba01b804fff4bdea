{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\SelectFilterField\\\\index.tsx\";\nimport styles from \"./SelectFilterField.module.scss\";\nimport { Button } from \"../Button\";\nimport React, { useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nfunction ActiveSvg(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      transform: `${props.leak ? 'rotate(0deg)' : 'rotate(180deg)'}`\n    },\n    width: \"9\",\n    height: \"6\",\n    viewBox: \"0 0 9 6\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M1 1L4.5 4.5L8 1\",\n      stroke: \"#D0D0DD\",\n      strokeWidth: \"1.3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\n\nexport const SelectFilterField = ({\n  fields,\n  onSelect,\n  selectedField\n}) => {\n  const {\n    0: field,\n    1: setField\n  } = useState(selectedField ? selectedField : '');\n  const [visiable, setVisiable] = React.useState(false);\n  const [leak, setLeak] = React.useState(false);\n\n  const toggleVisible = () => {\n    setVisiable(!visiable);\n  };\n\n  const toggleLeak = () => {\n    setLeak(!leak);\n  };\n\n  const handleSelect = fld => {\n    setField(fld);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => toggleLeak(),\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(styles.selectCategory),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: clsx(styles.btn, field.length ? styles.active : ''),\n        onClick: () => {},\n        variant: 'outlined',\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: clsx(styles.selectCategoryText, field.length ? styles.active : ''),\n          children: [field.length ? field : fields[0], /*#__PURE__*/_jsxDEV(ActiveSvg, {\n            leak: leak\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), leak && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.newPop,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fields.map((f, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelect(f),\n            children: f\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/SelectFilterField/index.tsx"],"names":["styles","Button","React","useState","Typography","clsx","ActiveSvg","props","transform","leak","SelectFilterField","fields","onSelect","selectedField","field","setField","visiable","setVisiable","setLeak","toggleVisible","toggleLeak","handleSelect","fld","root","selectCategory","btn","length","active","selectCategoryText","newPop","map","f","idx"],"mappings":"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","sourcesContent":["import styles from \"./SelectFilterField.module.scss\";\r\nimport {Button} from \"../Button\";\r\nimport {Category} from \"../../interfaces\";\r\nimport {MenuList} from \"../MenuList\";\r\nimport React, {useState} from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\ntype Props = {\r\n    fields: string[],\r\n    onSelect: (field: string) => void,\r\n    selectedField?: string\r\n}\r\n\r\n\r\nfunction ActiveSvg(props: { leak: boolean }) {\r\n    return <svg style={{transform: `${props.leak ? 'rotate(0deg)' : 'rotate(180deg)'}`}} width=\"9\" height=\"6\"\r\n                viewBox=\"0 0 9 6\" fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M1 1L4.5 4.5L8 1\" stroke=\"#D0D0DD\" strokeWidth=\"1.3\"/>\r\n    </svg>;\r\n}\r\n\r\nexport const SelectFilterField = ({fields, onSelect, selectedField}: Props) => {\r\n    const [field, setField] = useState(selectedField ? selectedField : '')\r\n    const [visiable, setVisiable] = React.useState(false);\r\n    const [leak, setLeak] = React.useState(false);\r\n\r\n    const toggleVisible = () => {\r\n        setVisiable(!visiable);\r\n    }\r\n    const toggleLeak = () => {\r\n        setLeak(!leak);\r\n    }\r\n\r\n    const handleSelect = (fld: string) => {\r\n        setField(fld);\r\n    }\r\n\r\n    return (\r\n        <div onClick={() => toggleLeak()} className={styles.root}>\r\n            <div className={clsx(styles.selectCategory)}>\r\n                <Button className={clsx(styles.btn, field.length ? styles.active : '')} onClick={() => {\r\n                }} variant={'outlined'}>\r\n                    <Typography className={clsx(styles.selectCategoryText, field.length ? styles.active : '')}>\r\n                        {field.length ? field : fields[0]}\r\n                        <ActiveSvg leak={leak}/>\r\n\r\n                    </Typography>\r\n                </Button>\r\n\r\n            </div>\r\n            {\r\n                leak && <div className={styles.newPop}>\r\n                    <ul>\r\n                        {fields.map((f, idx) => {\r\n                            return (\r\n                                <li key={idx} onClick={() => handleSelect(f)}>\r\n                                    {f}\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}