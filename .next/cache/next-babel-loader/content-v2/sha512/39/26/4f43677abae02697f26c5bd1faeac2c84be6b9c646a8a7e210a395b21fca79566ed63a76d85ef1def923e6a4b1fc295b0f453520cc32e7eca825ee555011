{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\FormUserLinks\\\\index.tsx\";\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useFieldArray } from 'react-hook-form';\nimport styles from './DynamicLinks.module.scss';\nexport function DynamicLinks({\n  control,\n  errors,\n  name = 'links',\n  register,\n  text = 'Social profile link'\n}) {\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [fields.filter(Boolean).map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(styles.formField, {\n        [styles.formFieldWithLabel]: !index\n      })\n    }, field.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"presentation\",\n      onClick: () => append({\n        name: '',\n        role: '',\n        value: ''\n      }),\n      className: styles.addMore,\n      children: \"+ Add more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/FormUserLinks/index.tsx"],"names":["clsx","React","useFieldArray","styles","DynamicLinks","control","errors","name","register","text","fields","append","remove","filter","Boolean","map","field","index","formField","formFieldWithLabel","id","role","value","addMore"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAiBC,aAAjB,QAAsD,iBAAtD;AAGA,OAAOC,MAAP,MAAmB,4BAAnB;AAUA,OAAO,SAASC,YAAT,CACH;AACIC,EAAAA,OADJ;AAEIC,EAAAA,MAFJ;AAGIC,EAAAA,IAAI,GAAG,OAHX;AAIIC,EAAAA,QAJJ;AAKIC,EAAAA,IAAI,GAAG;AALX,CADG,EAOkG;AACrG,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,MAA2BV,aAAa,CAAC;AAC3CG,IAAAA,OAD2C;AAE3CE,IAAAA;AAF2C,GAAD,CAA9C;AAKA,sBACI;AAAA,eACKG,MAAM,CAACG,MAAP,CAAcC,OAAd,EAAuBC,GAAvB,CAA2B,CAACC,KAAD,EAAQC,KAAR,kBACxB;AAAoB,MAAA,SAAS,EAAEjB,IAAI,CAACG,MAAM,CAACe,SAAR,EAAmB;AAAC,SAACf,MAAM,CAACgB,kBAAR,GAA6B,CAACF;AAA/B,OAAnB;AAAnC,OAAUD,KAAK,CAACI,EAAhB;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAMI;AAAG,MAAA,IAAI,EAAC,cAAR;AAAuB,MAAA,OAAO,EAAE,MAAYT,MAAM,CAAC;AAACJ,QAAAA,IAAI,EAAE,EAAP;AAAWc,QAAAA,IAAI,EAAE,EAAjB;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAAD,CAAlD;AACG,MAAA,SAAS,EAAEnB,MAAM,CAACoB,OADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAaH","sourcesContent":["import clsx from 'clsx';\r\nimport {FormField} from 'components/FormField';\r\nimport React from 'react';\r\nimport {Control, useFieldArray, UseFormRegister} from 'react-hook-form';\r\nimport {FieldErrors} from 'react-hook-form/dist/types/errors';\r\n\r\nimport styles from './DynamicLinks.module.scss';\r\n\r\ninterface DynamicLinksProps<T> {\r\n    control: Control;\r\n    register: UseFormRegister<any>;\r\n    errors:  FieldErrors;\r\n    name?: string;\r\n    text?: string;\r\n}\r\n\r\nexport function DynamicLinks<T>(\r\n    {\r\n        control,\r\n        errors,\r\n        name = 'links',\r\n        register,\r\n        text = 'Social profile link',\r\n    }: DynamicLinksProps<T extends { links: Array<{ value: string }> } ? T : never>): React.ReactElement {\r\n    const {fields, append, remove} = useFieldArray({\r\n        control,\r\n        name,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {fields.filter(Boolean).map((field, index) => (\r\n                <div key={field.id} className={clsx(styles.formField, {[styles.formFieldWithLabel]: !index})}>\r\n\r\n                </div>\r\n            ))}\r\n            <p role=\"presentation\" onClick={(): void => append({name: '', role: '', value: ''})}\r\n               className={styles.addMore}>\r\n                + Add more\r\n            </p>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}