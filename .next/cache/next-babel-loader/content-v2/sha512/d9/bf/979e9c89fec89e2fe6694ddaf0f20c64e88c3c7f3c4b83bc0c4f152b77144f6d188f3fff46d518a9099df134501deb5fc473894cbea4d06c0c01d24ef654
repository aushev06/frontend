{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\NotificationDropdown\\\\index.tsx\";\nimport { IconButton, List, Popover, Typography } from '@material-ui/core';\nimport React from 'react';\nimport styles from './NotificationDropdown.module.scss';\nexport const NotificationDropdown = ({\n  notifications\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [newItem, setNewItem] = React.useState(notifications !== null && notifications !== void 0 ? notifications : []);\n  const open = Boolean(anchorEl);\n\n  const toggleOpenPopup = event => {\n    console.log(1230);\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null); // (async (): Promise<void> => {\n    //   await Axios.put(`${Endpoints.NOTIFICATIONS}/read`);\n    // })();\n    //\n    // const newItemRead = newItem.map((item) => {\n    //   if (item.readAt === null) {\n    //     return { ...item, readAt: new Date() };\n    //   }\n    //   return item;\n    // });\n    // setNewItem(newItemRead);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.notification,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleOpenPopup,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"ml-10 cursor-pointer\",\n          src: \"/notifications.svg\",\n          alt: \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      elevation: 0,\n      classes: {\n        paper: styles.notificationPopup\n      },\n      onClose: handleClose,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content pl-25 pr-25 pb-25\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.title,\n          variant: \"overline\",\n          display: \"block\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"opacity-6\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.notificationList,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: newItem.length ? newItem.map(notification => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: 'test',\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.listContent,\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"test\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"test\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"test\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)\n              }, notification.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-40 mt-30\",\n              children: \"NOT FOUND\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/NotificationDropdown/index.tsx"],"names":["IconButton","List","Popover","Typography","React","styles","NotificationDropdown","notifications","anchorEl","setAnchorEl","useState","newItem","setNewItem","open","Boolean","toggleOpenPopup","event","console","log","currentTarget","handleClose","notification","paper","notificationPopup","vertical","horizontal","title","notificationList","length","map","listContent","id"],"mappings":"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","sourcesContent":["import { Badge, IconButton, List, Popover, Typography } from '@material-ui/core';\r\nimport format from 'date-fns/format';\r\nimport React from 'react';\r\n\r\nimport styles from './NotificationDropdown.module.scss';\r\nimport {Notification, User} from \"../../interfaces\";\r\n\r\ninterface NotificationDropdownInterface {\r\n  notifications: Notification[];\r\n}\r\n\r\nexport const NotificationDropdown: React.FC<NotificationDropdownInterface> = ({ notifications }): React.ReactElement => {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [newItem, setNewItem] = React.useState(notifications ?? []);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const toggleOpenPopup = (event: React.MouseEvent<HTMLButtonElement>): void => {\r\n    console.log(1230);\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    setAnchorEl(null);\r\n\r\n    // (async (): Promise<void> => {\r\n    //   await Axios.put(`${Endpoints.NOTIFICATIONS}/read`);\r\n    // })();\r\n    //\r\n    // const newItemRead = newItem.map((item) => {\r\n    //   if (item.readAt === null) {\r\n    //     return { ...item, readAt: new Date() };\r\n    //   }\r\n    //   return item;\r\n    // });\r\n\r\n    // setNewItem(newItemRead);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.notification}>\r\n        <IconButton onClick={toggleOpenPopup}>\r\n          <img className=\"ml-10 cursor-pointer\" src=\"/notifications.svg\" alt=\"Уведомления\"/>\r\n        </IconButton>\r\n\r\n      </div>\r\n      <Popover\r\n          elevation={0}\r\n        classes={{\r\n          paper: styles.notificationPopup,\r\n        }}\r\n        onClose={handleClose}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className=\"content pl-25 pr-25 pb-25\">\r\n          <Typography className={styles.title} variant=\"overline\" display=\"block\">\r\n            <b className=\"opacity-6\">Notifications</b>\r\n          </Typography>\r\n\r\n          <div className={styles.notificationList}>\r\n            <List>\r\n              {newItem.length ? (\r\n                newItem.map((notification) => {\r\n                  return (\r\n                    <li key={notification.id} className={'test'}>\r\n                      <div className={styles.listContent}>\r\n                        <h4>test</h4>\r\n                        <p>test</p>\r\n                        <span>test</span>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"mb-40 mt-30\">\r\n                  NOT FOUND\r\n                </div>\r\n              )}\r\n            </List>\r\n          </div>\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}