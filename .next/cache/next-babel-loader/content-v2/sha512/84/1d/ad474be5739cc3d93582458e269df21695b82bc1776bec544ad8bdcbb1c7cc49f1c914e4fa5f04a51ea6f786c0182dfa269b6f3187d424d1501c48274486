{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\CommentList\\\\index.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { PostComment } from \"../PostComment\";\nexport var CommentList = function CommentList(_ref) {\n  var comments = _ref.comments,\n      onReplyComment = _ref.onReplyComment,\n      onSetLike = _ref.onSetLike;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: comments.map(function (comment) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PostComment, {\n          onReplyComment: onReplyComment,\n          comment: comment,\n          onSetLike: onSetLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, _this), comment.comments.map(function (childrenComment) {\n          return /*#__PURE__*/_jsxDEV(PostComment, {\n            onSetLike: onSetLike,\n            isChildren: true,\n            comment: childrenComment,\n            onReplyComment: onReplyComment\n          }, childrenComment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 66\n          }, _this);\n        })]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n_c = CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/CommentList/index.tsx"],"names":["React","PostComment","CommentList","comments","onReplyComment","onSetLike","map","comment","childrenComment","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AASA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkD;AAAA,MAAhDC,QAAgD,QAAhDA,QAAgD;AAAA,MAAtCC,cAAsC,QAAtCA,cAAsC;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AACzE,sBACI;AAAA,cACKF,QAAQ,CAACG,GAAT,CAAa,UAAAC,OAAO,EAAI;AACrB,0BACI;AAAA,gCACI,QAAC,WAAD;AAAa,UAAA,cAAc,EAAEH,cAA7B;AAA6C,UAAA,OAAO,EAAEG,OAAtD;AAA+D,UAAA,SAAS,EAAEF;AAA1E;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKE,OAAO,CAACJ,QAAR,CAAiBG,GAAjB,CAAqB,UAAAE,eAAe;AAAA,8BAAI,QAAC,WAAD;AACrC,YAAA,SAAS,EAAEH,SAD0B;AAEZ,YAAA,UAAU,MAFE;AAGrC,YAAA,OAAO,EAAEG,eAH4B;AAIrC,YAAA,cAAc,EAAEJ;AAJqB,aAEhCI,eAAe,CAACC,EAFgB;AAAA;AAAA;AAAA;AAAA,mBAAJ;AAAA,SAApC,CAFL;AAAA,SAAUF,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,eADJ;AAWH,KAZA;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAiBH,CAlBM;KAAMP,W","sourcesContent":["import React from \"react\";\r\nimport {PostComment} from \"../PostComment\";\r\nimport {Comment} from \"../../interfaces\";\r\n\r\ntype Props = {\r\n    comments: Comment[];\r\n    onReplyComment: (text: string, userId: number, parentId: number) => void;\r\n    onSetLike: (commentId: number, like: unknown) => void\r\n}\r\n\r\nexport const CommentList = ({comments, onReplyComment, onSetLike}: Props) => {\r\n    return (\r\n        <div>\r\n            {comments.map(comment => {\r\n                return (\r\n                    <div key={comment.id}>\r\n                        <PostComment onReplyComment={onReplyComment} comment={comment} onSetLike={onSetLike}/>\r\n                        {comment.comments.map(childrenComment => <PostComment\r\n                            onSetLike={onSetLike}\r\n                            key={childrenComment.id} isChildren\r\n                            comment={childrenComment}\r\n                            onReplyComment={onReplyComment}\r\n                        />)}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}