{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { HYDRATE } from \"next-redux-wrapper\";\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    data: undefined\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.data = action.payload;\n      return state;\n    }\n  },\n  extraReducers: {\n    [HYDRATE]: (state, action) => {\n      console.log(action.payload);\n      return _objectSpread(_objectSpread({}, state), action.payload.user);\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  setUser\n} = userSlice.actions;\nexport const {\n  reducer: userReducer\n} = userSlice;","map":{"version":3,"sources":["C:/Projects/projects/frontend/redux/user/slice.ts"],"names":["createSlice","HYDRATE","userSlice","name","initialState","data","undefined","reducers","setUser","state","action","payload","extraReducers","console","log","user","actions","reducer","userReducer"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAEA,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;AACnCG,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAEC;AADM,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACJ,IAAN,GAAaK,MAAM,CAACC,OAApB;AACA,aAAOF,KAAP;AACD;AAJO,GALyB;AAYnCG,EAAAA,aAAa,EAAE;AACb,KAACX,OAAD,GAAW,CAACQ,KAAD,EAAQC,MAAR,KAAmB;AAC5BG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACC,OAAnB;AACA,6CACKF,KADL,GAEKC,MAAM,CAACC,OAAP,CAAeI,IAFpB;AAID;AAPY;AAZoB,CAAD,CAA7B,C,CAwBP;;AACA,OAAO,MAAM;AAAEP,EAAAA;AAAF,IAAcN,SAAS,CAACc,OAA9B;AACP,OAAO,MAAM;AAAEC,EAAAA,OAAO,EAAEC;AAAX,IAA2BhB,SAAjC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {HYDRATE} from \"next-redux-wrapper\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    data: undefined\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.data = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n\r\n  extraReducers: {\r\n    [HYDRATE]: (state, action) => {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        ...action.payload.user,\r\n      };\r\n    },\r\n  },\r\n\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setUser } = userSlice.actions;\r\nexport const { reducer: userReducer } = userSlice;\r\n"]},"metadata":{},"sourceType":"module"}