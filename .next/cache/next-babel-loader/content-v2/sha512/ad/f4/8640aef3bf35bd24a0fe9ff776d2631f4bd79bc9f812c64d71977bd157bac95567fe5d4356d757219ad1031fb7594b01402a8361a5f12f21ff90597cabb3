{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\AvailableForWork\\\\index.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './AvailableForWork.module.scss';\nimport { Checkbox } from '../Checkbox';\nexport var AvailableForWork = function AvailableForWork(_ref) {\n  var checked = _ref.checked,\n      onChange = _ref.onChange,\n      setChecked = _ref.setChecked,\n      isLoading = _ref.isLoading;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx('d-flex justify-content-center'),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: clsx(styles.uncheckedTitle, checked || isLoading ? styles.unchecked : styles.checked),\n      onClick: function onClick() {\n        return !isLoading && setChecked(false);\n      },\n      children: \"\\u041D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u0435\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: checked,\n      onChange: onChange,\n      disabled: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: clsx(styles.checkedTitle, checked && !isLoading ? styles.checked : styles.unchecked),\n      onClick: function onClick() {\n        return !isLoading && setChecked(true);\n      },\n      children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u0435\\u043D \\u0434\\u043B\\u044F \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n_c = AvailableForWork;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableForWork\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/AvailableForWork/index.tsx"],"names":["React","clsx","styles","Checkbox","AvailableForWork","checked","onChange","setChecked","isLoading","uncheckedTitle","unchecked","checkedTitle"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AASA,OAAO,IAAMC,gBAAiD,GAAG,SAApDA,gBAAoD,OAAkD;AAAA,MAA/CC,OAA+C,QAA/CA,OAA+C;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACjH,sBACE;AAAK,IAAA,SAAS,EAAEP,IAAI,CAAC,+BAAD,CAApB;AAAA,4BACE;AACE,MAAA,SAAS,EAAEA,IAAI,CAACC,MAAM,CAACO,cAAR,EAAwBJ,OAAO,IAAIG,SAAX,GAAuBN,MAAM,CAACQ,SAA9B,GAA0CR,MAAM,CAACG,OAAzE,CADjB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAM,CAACG,SAAD,IAAcD,UAAU,CAAC,KAAD,CAA9B;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAOE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEF,OAAnB;AAA4B,MAAA,QAAQ,EAAEC,QAAtC;AAAgD,MAAA,QAAQ,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,aAPF,eAQE;AACE,MAAA,SAAS,EAAEP,IAAI,CAACC,MAAM,CAACS,YAAR,EAAsBN,OAAO,IAAI,CAACG,SAAZ,GAAwBN,MAAM,CAACG,OAA/B,GAAyCH,MAAM,CAACQ,SAAtE,CADjB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAM,CAACF,SAAD,IAAcD,UAAU,CAAC,IAAD,CAA9B;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CAlBM;KAAMH,gB","sourcesContent":["import React, {useState} from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport styles from './AvailableForWork.module.scss';\r\nimport { Checkbox } from '../Checkbox';\r\n\r\ninterface AvailableForWorkProps {\r\n  checked?: boolean;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  setChecked: (value: boolean) => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const AvailableForWork: React.FC<AvailableForWorkProps> = ({ checked, onChange, setChecked, isLoading }) => {\r\n  return (\r\n    <div className={clsx('d-flex justify-content-center')}>\r\n      <span\r\n        className={clsx(styles.uncheckedTitle, checked || isLoading ? styles.unchecked : styles.checked)}\r\n        onClick={() => !isLoading && setChecked(false)}\r\n      >\r\n        Недоступен\r\n      </span>\r\n      <Checkbox checked={checked} onChange={onChange} disabled={isLoading} />\r\n      <span\r\n        className={clsx(styles.checkedTitle, checked && !isLoading ? styles.checked : styles.unchecked)}\r\n        onClick={() => !isLoading && setChecked(true)}\r\n      >\r\n        Доступен для работы\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}