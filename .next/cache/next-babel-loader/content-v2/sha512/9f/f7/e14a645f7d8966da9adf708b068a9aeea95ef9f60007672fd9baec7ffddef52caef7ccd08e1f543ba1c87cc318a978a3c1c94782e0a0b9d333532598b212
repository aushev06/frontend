{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\EditorBlock\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from \"@material-ui/core\";\nimport styles from './EditorBlock.module.scss';\nimport { EditorJsWrapper } from \"../Editor/Editor\";\nimport { useState } from \"react\";\nimport { savePost } from \"../../services/api/PostApi\";\nimport { Button } from \"../Button\";\nimport { useRouter } from 'next/router';\nimport { SelectCategory } from \"../SelectCategory\";\nexport function EditorBlock(_ref) {\n  _s();\n\n  var categories = _ref.categories,\n      serverSidePost = _ref.serverSidePost;\n  var router = useRouter();\n\n  var _useState = useState(serverSidePost ? serverSidePost.body : [{\n    \"type\": \"header\",\n    \"data\": {\n      \"text\": \"\",\n      \"level\": 2\n    }\n  }]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(serverSidePost || null),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var _useState3 = useState((serverSidePost === null || serverSidePost === void 0 ? void 0 : serverSidePost.category) || categories[0]),\n      category = _useState3[0],\n      setCategory = _useState3[1];\n\n  var _useState4 = useState(''),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var handleSave = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(status) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setMessage('Сохранение...');\n              _context.prev = 1;\n              _context.next = 4;\n              return savePost({\n                title: data[0].data.text,\n                body: data,\n                themes: [{\n                  name: '#разработка',\n                  id: 0\n                }],\n                status: status,\n                category: category,\n                id: post === null || post === void 0 ? void 0 : post.id\n              });\n\n            case 4:\n              response = _context.sent;\n              setPost(response.data);\n              setMessage(status === 'draft' ? 'Сохранено в черновик...' : 'Опубликовано...');\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              setMessage('Произошла ошибка');\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function handleSave(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onSelectCategory = function onSelectCategory(cat) {\n    setCategory(cat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: message.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.header_draftText,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: post === null,\n          onClick: function onClick() {\n            return router.push(\"/post/\".concat(post.slug));\n          },\n          variant: 'outlined',\n          className: styles.eyes,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: '/eyes.svg'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: function onClick() {\n            return handleSave('draft');\n          },\n          variant: 'outlined',\n          className: styles.saveDraftBtn,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: function onClick() {\n            return handleSave('active');\n          },\n          variant: 'outlined',\n          className: styles.save,\n          children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectCategory, {\n      onSelect: onSelectCategory,\n      selectedCategory: category,\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(EditorJsWrapper, {\n      blocks: data,\n      config: {\n        onChange: function onChange(api) {\n          return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n            var getBlocks;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    getBlocks = /*#__PURE__*/function () {\n                      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                        var blocks;\n                        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                          while (1) {\n                            switch (_context2.prev = _context2.next) {\n                              case 0:\n                                _context2.next = 2;\n                                return api.saver.save();\n\n                              case 2:\n                                blocks = _context2.sent;\n                                setData(blocks.blocks);\n\n                              case 4:\n                              case \"end\":\n                                return _context2.stop();\n                            }\n                          }\n                        }, _callee2);\n                      }));\n\n                      return function getBlocks() {\n                        return _ref3.apply(this, arguments);\n                      };\n                    }();\n\n                    _context3.next = 3;\n                    return getBlocks();\n\n                  case 3:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }))();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditorBlock, \"mE+Lt6np7wZzTh3k7vJlrZRKYiM=\", false, function () {\n  return [useRouter];\n});\n\n_c = EditorBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorBlock\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/EditorBlock/index.tsx"],"names":["Typography","styles","EditorJsWrapper","useState","savePost","Button","useRouter","SelectCategory","EditorBlock","categories","serverSidePost","router","body","data","setData","post","setPost","category","setCategory","message","setMessage","handleSave","status","title","text","themes","name","id","response","onSelectCategory","cat","header","length","header_draftText","buttons","push","slug","eyes","saveDraftBtn","save","onChange","api","getBlocks","saver","blocks"],"mappings":"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","sourcesContent":["import {Typography} from \"@material-ui/core\";\r\nimport styles from './EditorBlock.module.scss'\r\nimport {EditorJsWrapper} from \"../Editor/Editor\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {savePost} from \"../../services/api/PostApi\";\r\nimport {Button} from \"../Button\";\r\nimport {useRouter} from 'next/router';\r\nimport {Category, PostData} from \"../../interfaces\";\r\nimport {SelectCategory} from \"../SelectCategory\";\r\n\r\ntype Props = {\r\n    categories: Category[],\r\n    serverSidePost?: PostData\r\n}\r\n\r\nexport function EditorBlock({ categories, serverSidePost }: Props) {\r\n    const router = useRouter();\r\n    const [data, setData] = useState<Array<any>>(serverSidePost ? serverSidePost.body : [\r\n        {\"type\": \"header\", \"data\": {\"text\": \"\", \"level\": 2}}\r\n    ]);\r\n\r\n    const [post, setPost] = useState<PostData>(serverSidePost || null);\r\n    const [category, setCategory] = useState<Category>(serverSidePost?.category || categories[0]);\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSave = async (status: string) => {\r\n        setMessage('Сохранение...')\r\n       try {\r\n           const response =  await savePost({\r\n               title: data[0].data.text as string,\r\n               body: data,\r\n               themes: [{name: '#разработка', id: 0}],\r\n               status,\r\n               category,\r\n               id: post?.id\r\n           });\r\n\r\n           setPost(response.data);\r\n           setMessage(status === 'draft' ? 'Сохранено в черновик...' : 'Опубликовано...')\r\n       } catch (e) {\r\n           setMessage('Произошла ошибка')\r\n       }\r\n\r\n    }\r\n\r\n    const onSelectCategory = (cat: Category) => {\r\n        setCategory(cat);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.header}>\r\n                <div>\r\n                    {message.length > 0 && <Typography className={styles.header_draftText}>{message}</Typography>}\r\n                </div>\r\n\r\n                <div className={styles.buttons}>\r\n                    <Button disabled={post === null} onClick={() => router.push(`/post/${post.slug}`)} variant={'outlined'} className={styles.eyes}>\r\n                        <img src={'/eyes.svg'}/>\r\n                    </Button>\r\n\r\n                    <Button onClick={() => handleSave('draft')} variant={'outlined'} className={styles.saveDraftBtn}>\r\n                        Сохранить\r\n                    </Button>\r\n\r\n                    <Button onClick={() => handleSave('active')} variant={'outlined'} className={styles.save}>\r\n                        Опубликовать\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n           <SelectCategory onSelect={onSelectCategory} selectedCategory={category} categories={categories} />\r\n\r\n            <EditorJsWrapper\r\n                blocks={data}\r\n                config={{\r\n                async onChange(api): Promise<void> {\r\n                    const getBlocks = async () => {\r\n                        const blocks = await api.saver.save();\r\n                        setData(blocks.blocks)\r\n                    }\r\n                    await getBlocks();\r\n                }\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}