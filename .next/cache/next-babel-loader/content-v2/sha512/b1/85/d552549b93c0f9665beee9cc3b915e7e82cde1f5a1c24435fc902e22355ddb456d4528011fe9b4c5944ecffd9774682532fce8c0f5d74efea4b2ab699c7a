{"ast":null,"code":"import axios from '../../core/axios';\nexport const UserApi = {\n  login: async (email, password) => {\n    const formData = new FormData();\n    formData.append('email', email);\n    formData.append('password', password);\n    formData.append('remember', '1');\n    const {\n      data\n    } = await axios.post('/login', formData, {\n      maxRedirects: 0\n    });\n    return data;\n  },\n  getMe: async token => {\n    const {\n      data\n    } = await axios.get('/api/user', {\n      headers: {\n        Authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n    return data;\n  },\n  getNotifications: async token => {\n    const {\n      data\n    } = await axios.get('/api/user/notifications', {\n      headers: {\n        Authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n    return data;\n  },\n  show: async id => {\n    const {\n      data\n    } = await axios.get('/api/users/' + id);\n    return data;\n  },\n  updateProfile: async (data, id) => {\n    var _data$links;\n\n    const formData = new FormData();\n    Object.keys(data).forEach(param => {\n      if (param !== 'links') {\n        formData.append(param, data[param]);\n      }\n    });\n\n    if ((_data$links = data.links) !== null && _data$links !== void 0 && _data$links.length) {\n      data.links.map((l, key) => {\n        formData.append(`links[${key}]`, l);\n      });\n    }\n\n    await axios.patch(`/api/user/${id}`, data);\n  }\n};\nexport const getCookie = () => {\n  return axios.get('/sanctum/csrf-cookie');\n};","map":{"version":3,"sources":["C:/Projects/projects/frontend/services/api/UserApi.ts"],"names":["axios","UserApi","login","email","password","formData","FormData","append","data","post","maxRedirects","getMe","token","get","headers","Authorization","getNotifications","show","id","updateProfile","Object","keys","forEach","param","links","length","map","l","key","patch","getCookie"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAGA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,KAAK,EAAE,OAAOC,KAAP,EAAsBC,QAAtB,KAAyD;AAC9D,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,KAAzB;AACAE,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BH,QAA5B;AACAC,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,GAA5B;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CAAW,QAAX,EAAqBJ,QAArB,EAA+B;AACpDK,MAAAA,YAAY,EAAE;AADsC,KAA/B,CAAvB;AAIA,WAAOF,IAAP;AACD,GAZoB;AAcrBG,EAAAA,KAAK,EAAE,MAAOC,KAAP,IAA0B;AAC/B,UAAM;AAAEJ,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACa,GAAN,CAAU,WAAV,EAAuB;AAC5CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AADmC,KAAvB,CAAvB;AAKA,WAAOJ,IAAP;AACD,GArBoB;AAuBrBQ,EAAAA,gBAAgB,EAAE,MAAOJ,KAAP,IAA0B;AAC1C,UAAM;AAAEJ,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACa,GAAN,CAAU,yBAAV,EAAqC;AAC1DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AADiD,KAArC,CAAvB;AAKA,WAAOJ,IAAP;AACD,GA9BoB;AAgCrBS,EAAAA,IAAI,EAAE,MAAOC,EAAP,IAAsB;AAC1B,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACa,GAAN,CAAU,gBAAgBK,EAA1B,CAAvB;AACA,WAAOV,IAAP;AACD,GAnCoB;AAqCrBW,EAAAA,aAAa,EAAE,OAAOX,IAAP,EAA4BU,EAA5B,KAA2C;AAAA;;AACxD,UAAMb,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAc,IAAAA,MAAM,CAACC,IAAP,CAAYb,IAAZ,EAAkBc,OAAlB,CAA2BC,KAAD,IAAW;AACnC,UAAIA,KAAK,KAAK,OAAd,EAAuB;AACrBlB,QAAAA,QAAQ,CAACE,MAAT,CAAgBgB,KAAhB,EAAuBf,IAAI,CAACe,KAAD,CAA3B;AACD;AACF,KAJD;;AAMA,uBAAIf,IAAI,CAACgB,KAAT,wCAAI,YAAYC,MAAhB,EAAwB;AACtBjB,MAAAA,IAAI,CAACgB,KAAL,CAAWE,GAAX,CAAe,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACzBvB,QAAAA,QAAQ,CAACE,MAAT,CAAiB,SAAQqB,GAAI,GAA7B,EAAiCD,CAAjC;AACD,OAFD;AAGD;;AAED,UAAM3B,KAAK,CAAC6B,KAAN,CAAa,aAAYX,EAAG,EAA5B,EAA+BV,IAA/B,CAAN;AAED;AAtDoB,CAAhB;AA2DP,OAAO,MAAMsB,SAAS,GAAG,MAAM;AAC7B,SAAO9B,KAAK,CAACa,GAAN,CAAU,sBAAV,CAAP;AACD,CAFM","sourcesContent":["import axios from '../../core/axios';\r\nimport {User} from \"../../interfaces\";\r\n\r\nexport const UserApi = {\r\n  login: async (email: string, password: string): Promise<any> => {\r\n    const formData = new FormData();\r\n    formData.append('email', email);\r\n    formData.append('password', password);\r\n    formData.append('remember', '1');\r\n\r\n    const { data } = await axios.post('/login', formData, {\r\n      maxRedirects: 0,\r\n    });\r\n\r\n    return data;\r\n  },\r\n\r\n  getMe: async (token?: string) => {\r\n    const { data } = await axios.get('/api/user', {\r\n      headers: {\r\n        Authorization: token ? `Bearer ${token}` : ''\r\n      }\r\n    });\r\n    return data;\r\n  },\r\n\r\n  getNotifications: async (token?: string) => {\r\n    const { data } = await axios.get('/api/user/notifications', {\r\n      headers: {\r\n        Authorization: token ? `Bearer ${token}` : ''\r\n      }\r\n    });\r\n    return data;\r\n  },\r\n\r\n  show: async (id: number) => {\r\n    const { data } = await axios.get('/api/users/' + id);\r\n    return data;\r\n  },\r\n\r\n  updateProfile: async (data: Partial<User>, id: number) => {\r\n    const formData = new FormData();\r\n\r\n    Object.keys(data).forEach((param) => {\r\n      if (param !== 'links') {\r\n        formData.append(param, data[param]);\r\n      }\r\n    })\r\n\r\n    if (data.links?.length) {\r\n      data.links.map((l, key) => {\r\n        formData.append(`links[${key}]`, l);\r\n      })\r\n    }\r\n\r\n    await axios.patch(`/api/user/${id}`, data)\r\n\r\n  }\r\n\r\n\r\n};\r\n\r\nexport const getCookie = () => {\r\n  return axios.get('/sanctum/csrf-cookie');\r\n};\r\n"]},"metadata":{},"sourceType":"module"}