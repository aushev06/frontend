{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { userReducer } from './user/slice';\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { directoryReducer } from \"./directory/slice\";\nexport const makeStore = () => configureStore({\n  reducer: {\n    user: userReducer,\n    directory: directoryReducer\n  }\n});\nexport const wrapper = createWrapper(makeStore);","map":{"version":3,"sources":["C:/Projects/projects/frontend/redux/store.ts"],"names":["configureStore","userReducer","createWrapper","directoryReducer","makeStore","reducer","user","directory","wrapper"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAAQC,aAAR,QAAqC,oBAArC;AACA,SAAQC,gBAAR,QAA+B,mBAA/B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAMJ,cAAc,CAAC;AAC5CK,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEL,WADC;AAEPM,IAAAA,SAAS,EAAEJ;AAFJ;AADmC,CAAD,CAAtC;AAUP,OAAO,MAAMK,OAAO,GAAGN,aAAa,CAAWE,SAAX,CAA7B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { userReducer } from './user/slice';\r\nimport {createWrapper, HYDRATE} from \"next-redux-wrapper\";\r\nimport {directoryReducer} from \"./directory/slice\";\r\n\r\nexport const makeStore = () => configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    directory: directoryReducer\r\n  },\r\n});\r\n\r\nexport type AppStore = ReturnType<typeof makeStore>;\r\nexport type AppState = ReturnType<AppStore['getState']>;\r\n\r\nexport const wrapper = createWrapper<AppStore>(makeStore);\r\n\r\n"]},"metadata":{},"sourceType":"module"}