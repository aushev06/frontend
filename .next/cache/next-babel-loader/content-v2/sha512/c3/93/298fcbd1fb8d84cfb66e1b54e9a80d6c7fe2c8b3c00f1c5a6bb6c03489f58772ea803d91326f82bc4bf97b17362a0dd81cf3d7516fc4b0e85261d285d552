{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\FormUserLinks\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useFieldArray } from 'react-hook-form';\nimport styles from './DynamicLinks.module.scss';\nexport function DynamicLinks(_ref) {\n  _s();\n\n  var _this = this;\n\n  var control = _ref.control,\n      errors = _ref.errors,\n      _ref$name = _ref.name,\n      name = _ref$name === void 0 ? 'links' : _ref$name,\n      register = _ref.register,\n      _ref$text = _ref.text,\n      text = _ref$text === void 0 ? 'Social profile link' : _ref$text;\n\n  var _useFieldArray = useFieldArray({\n    control: control,\n    name: name\n  }),\n      fields = _useFieldArray.fields,\n      append = _useFieldArray.append,\n      remove = _useFieldArray.remove;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [fields.filter(Boolean).map(function (field, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(styles.formField, _defineProperty({}, styles.formFieldWithLabel, !index))\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"presentation\",\n      onClick: function onClick() {\n        return append({\n          name: '',\n          role: '',\n          value: ''\n        });\n      },\n      className: styles.addMore,\n      children: \"+ Add more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DynamicLinks, \"3aLVJCcn89SIoLbqvR0mhkuig3U=\", false, function () {\n  return [useFieldArray];\n});\n\n_c = DynamicLinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicLinks\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/FormUserLinks/index.tsx"],"names":["clsx","React","useFieldArray","styles","DynamicLinks","control","errors","name","register","text","fields","append","remove","filter","Boolean","map","field","index","formField","formFieldWithLabel","id","role","value","addMore"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4C,iBAA5C;AAIA,OAAOC,MAAP,MAAmB,4BAAnB;AAUA,OAAO,SAASC,YAAT,OAOkG;AAAA;;AAAA;;AAAA,MALjGC,OAKiG,QALjGA,OAKiG;AAAA,MAJjGC,MAIiG,QAJjGA,MAIiG;AAAA,uBAHjGC,IAGiG;AAAA,MAHjGA,IAGiG,0BAH1F,OAG0F;AAAA,MAFjGC,QAEiG,QAFjGA,QAEiG;AAAA,uBADjGC,IACiG;AAAA,MADjGA,IACiG,0BAD1F,qBAC0F;;AAAA,uBACpEP,aAAa,CAAC;AAC3CG,IAAAA,OAAO,EAAPA,OAD2C;AAE3CE,IAAAA,IAAI,EAAJA;AAF2C,GAAD,CADuD;AAAA,MAC9FG,MAD8F,kBAC9FA,MAD8F;AAAA,MACtFC,MADsF,kBACtFA,MADsF;AAAA,MAC9EC,MAD8E,kBAC9EA,MAD8E;;AAMrG,sBACI;AAAA,eACKF,MAAM,CAACG,MAAP,CAAcC,OAAd,EAAuBC,GAAvB,CAA2B,UAACC,KAAD,EAAQC,KAAR;AAAA,0BACxB;AAAoB,QAAA,SAAS,EAAEjB,IAAI,CAACG,MAAM,CAACe,SAAR,sBAAqBf,MAAM,CAACgB,kBAA5B,EAAiD,CAACF,KAAlD;AAAnC,SAAUD,KAAK,CAACI,EAAhB;AAAA;AAAA;AAAA;AAAA,eADwB;AAAA,KAA3B,CADL,eAMI;AAAG,MAAA,IAAI,EAAC,cAAR;AAAuB,MAAA,OAAO,EAAE;AAAA,eAAYT,MAAM,CAAC;AAACJ,UAAAA,IAAI,EAAE,EAAP;AAAWc,UAAAA,IAAI,EAAE,EAAjB;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SAAD,CAAlB;AAAA,OAAhC;AACG,MAAA,SAAS,EAAEnB,MAAM,CAACoB,OADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAaH;;GA1BenB,Y;UAQqBF,a;;;KARrBE,Y","sourcesContent":["import clsx from 'clsx';\r\nimport {FormField} from 'components/FormField';\r\nimport React from 'react';\r\nimport {useFieldArray, UseFormMethods} from 'react-hook-form';\r\nimport {FieldErrors} from 'react-hook-form/dist/types/errors';\r\n\r\nimport RemoveSvg from '../../../../assets/icons/close.svg';\r\nimport styles from './DynamicLinks.module.scss';\r\n\r\ninterface DynamicLinksProps<T> {\r\n    control: UseFormMethods<Record<string, any>>['control'];\r\n    register: UseFormMethods<Record<string, T[keyof T]>>['register'];\r\n    errors: UseFormMethods<T>['errors'] | FieldErrors;\r\n    name?: string;\r\n    text?: string;\r\n}\r\n\r\nexport function DynamicLinks<T>(\r\n    {\r\n        control,\r\n        errors,\r\n        name = 'links',\r\n        register,\r\n        text = 'Social profile link',\r\n    }: DynamicLinksProps<T extends { links: Array<{ value: string }> } ? T : never>): React.ReactElement {\r\n    const {fields, append, remove} = useFieldArray({\r\n        control,\r\n        name,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {fields.filter(Boolean).map((field, index) => (\r\n                <div key={field.id} className={clsx(styles.formField, {[styles.formFieldWithLabel]: !index})}>\r\n                    \r\n                </div>\r\n            ))}\r\n            <p role=\"presentation\" onClick={(): void => append({name: '', role: '', value: ''})}\r\n               className={styles.addMore}>\r\n                + Add more\r\n            </p>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}