{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from '../../core/axios';\nexport const saveImage = image => {\n  const formData = new FormData();\n  formData.append('image', image);\n  return axios.post('/api/posts/image-by-url', formData);\n};\nexport const savePost = async (postData) => {\n  let body = {\n    body: postData.body,\n    title: postData.title,\n    description: 'Test',\n    themes: postData.themes || [],\n    status: postData === null || postData === void 0 ? void 0 : postData.status,\n    category: postData.category\n  };\n\n  if (postData !== null && postData !== void 0 && postData.id) {\n    const {\n      data\n    } = await axios.put(`/api/posts/${postData.id}`, body);\n    return data;\n  } else {\n    const {\n      data\n    } = await axios.post(`/api/posts`, body);\n    return data;\n  }\n};\nexport const getPosts = async (params = {}) => {\n  const {\n    data\n  } = await axios.get('/api/posts', {\n    params: _objectSpread({}, params)\n  });\n  return data.data;\n};\nexport const getThemes = async () => {\n  const {\n    data\n  } = await axios.get('/api/posts/themes');\n  return data;\n};\nexport const saveByUrl = async url => {\n  return await axios.post('/api/posts/image-by-url', {\n    url\n  });\n};\nexport const showPost = async (slug, token) => {\n  const {\n    data\n  } = await axios.get(`/api/posts/${slug}`, {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : ''\n    }\n  });\n  return data;\n};\nexport const getPostComments = async (id, apiToken) => {\n  const {\n    data\n  } = await axios.get(`/api/posts/${id}/comments`, {\n    headers: {\n      Authorization: apiToken ? `Bearer ${apiToken}` : ''\n    }\n  });\n  console.log(apiToken);\n  return data;\n};","map":{"version":3,"sources":["C:/Projects/projects/frontend/services/api/PostApi.ts"],"names":["axios","saveImage","image","formData","FormData","append","post","savePost","postData","body","title","description","themes","status","category","id","data","put","getPosts","params","get","getThemes","saveByUrl","url","showPost","slug","token","headers","Authorization","getPostComments","apiToken","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAIA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAiB;AACxC,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB;AACA,SAAOF,KAAK,CAACM,IAAN,CAAW,yBAAX,EAAsCH,QAAtC,CAAP;AACD,CAJM;AAMP,OAAO,MAAMI,QAAQ,GAAG,OAAOC,QAAP,KAOlB;AACJ,MAAIC,IAAI,GAAG;AACTA,IAAAA,IAAI,EAAED,QAAQ,CAACC,IADN;AAETC,IAAAA,KAAK,EAAEF,QAAQ,CAACE,KAFP;AAGTC,IAAAA,WAAW,EAAE,MAHJ;AAITC,IAAAA,MAAM,EAAEJ,QAAQ,CAACI,MAAT,IAAmB,EAJlB;AAKTC,IAAAA,MAAM,EAAEL,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEK,MALT;AAMTC,IAAAA,QAAQ,EAAEN,QAAQ,CAACM;AANV,GAAX;;AASA,MAAIN,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEO,EAAd,EAAkB;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAW,cAAaT,QAAQ,CAACO,EAAG,EAApC,EAAuCN,IAAvC,CAAvB;AACA,WAAOO,IAAP;AAED,GAJD,MAIO;AACL,UAAM;AAAEA,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACM,IAAN,CAAY,YAAZ,EAAyBG,IAAzB,CAAvB;AACA,WAAOO,IAAP;AACD;AACF,CAzBM;AA2BP,OAAO,MAAME,QAAQ,GAAG,OAAOC,MAAM,GAAG,EAAhB,KAA4C;AAClE,QAAM;AAAEH,IAAAA;AAAF,MAAW,MAAMhB,KAAK,CAACoB,GAAN,CAAU,YAAV,EAAwB;AAAED,IAAAA,MAAM,oBAAMA,MAAN;AAAR,GAAxB,CAAvB;AAEA,SAAOH,IAAI,CAACA,IAAZ;AACD,CAJM;AAMP,OAAO,MAAMK,SAAS,GAAG,YAA8B;AACrD,QAAM;AAAEL,IAAAA;AAAF,MAAW,MAAMhB,KAAK,CAACoB,GAAN,CAAU,mBAAV,CAAvB;AAEA,SAAOJ,IAAP;AACD,CAJM;AAMP,OAAO,MAAMM,SAAS,GAAG,MAAOC,GAAP,IAAuB;AAC9C,SAAO,MAAMvB,KAAK,CAACM,IAAN,CAAW,yBAAX,EAAsC;AAAEiB,IAAAA;AAAF,GAAtC,CAAb;AACD,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,OAAOC,IAAP,EAAqBC,KAArB,KAAwC;AAC9D,QAAM;AAAEV,IAAAA;AAAF,MAAY,MAAMhB,KAAK,CAACoB,GAAN,CAAW,cAAaK,IAAK,EAA7B,EAAgC;AACtDE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEF,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AAD6C,GAAhC,CAAxB;AAKA,SAAOV,IAAP;AACD,CAPM;AASP,OAAO,MAAMa,eAAe,GAAG,OAAOd,EAAP,EAAmBe,QAAnB,KAAyC;AACtE,QAAM;AAAEd,IAAAA;AAAF,MAAW,MAAMhB,KAAK,CAACoB,GAAN,CAAW,cAAaL,EAAG,WAA3B,EAAuC;AAC5DY,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEE,QAAQ,GAAI,UAASA,QAAS,EAAtB,GAA0B;AAD1C;AADmD,GAAvC,CAAvB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SAAOd,IAAP;AACD,CATM","sourcesContent":["import axios from '../../core/axios';\r\nimport {Category, PostData, Theme} from '../../interfaces';\r\nimport { getCookie } from './UserApi';\r\n\r\nexport const saveImage = (image: File) => {\r\n  const formData = new FormData();\r\n  formData.append('image', image);\r\n  return axios.post('/api/posts/image-by-url', formData);\r\n};\r\n\r\nexport const savePost = async (postData: {\r\n  title: string;\r\n  body: any;\r\n  themes?: Theme[],\r\n  status?: string,\r\n  category?: Category,\r\n  id?: number,\r\n}) => {\r\n  let body = {\r\n    body: postData.body,\r\n    title: postData.title,\r\n    description: 'Test',\r\n    themes: postData.themes || [],\r\n    status: postData?.status,\r\n    category: postData.category,\r\n  };\r\n\r\n  if (postData?.id) {\r\n    const { data } = await axios.put(`/api/posts/${postData.id}`, body);\r\n    return data\r\n\r\n  } else {\r\n    const { data } = await axios.post(`/api/posts`, body);\r\n    return data\r\n  }\r\n};\r\n\r\nexport const getPosts = async (params = {}): Promise<PostData[]> => {\r\n  const { data } = await axios.get('/api/posts', { params: {...params} });\r\n\r\n  return data.data;\r\n};\r\n\r\nexport const getThemes = async (): Promise<Theme[]> => {\r\n  const { data } = await axios.get('/api/posts/themes');\r\n\r\n  return data;\r\n};\r\n\r\nexport const saveByUrl = async (url: string) => {\r\n  return await axios.post('/api/posts/image-by-url', { url });\r\n};\r\n\r\nexport const showPost = async (slug: string, token?: string) => {\r\n  const { data } =  await axios.get(`/api/posts/${slug}`, {\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : ''\r\n    }\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getPostComments = async (id: number, apiToken?: string) => {\r\n  const { data } = await axios.get(`/api/posts/${id}/comments`, {\r\n    headers: {\r\n      Authorization: apiToken ? `Bearer ${apiToken}` : ''\r\n    }\r\n  })\r\n  console.log(apiToken)\r\n\r\n  return data;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}