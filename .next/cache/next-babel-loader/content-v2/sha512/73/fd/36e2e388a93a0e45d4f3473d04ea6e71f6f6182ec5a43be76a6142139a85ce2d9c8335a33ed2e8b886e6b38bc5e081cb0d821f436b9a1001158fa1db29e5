{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\SelectCategory\\\\index.tsx\";\nimport styles from \"./SelectCategory.module.scss\";\nimport React, { useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nfunction ActiveSvg(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      transform: `${props.leak ? 'rotate(0deg)' : 'rotate(180deg)'}`\n    },\n    width: \"9\",\n    height: \"6\",\n    viewBox: \"0 0 9 6\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M1 1L4.5 4.5L8 1\",\n      stroke: \"#D0D0DD\",\n      strokeWidth: \"1.3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\n\nexport const SelectCategory = ({\n  categories,\n  onSelect,\n  selectedCategory\n}) => {\n  const {\n    0: category,\n    1: setCategory\n  } = useState(selectedCategory);\n  const [visiable, setVisiable] = React.useState(false);\n  const [leak, setLeak] = React.useState(false);\n\n  const toggleVisible = () => {\n    setVisiable(!visiable);\n  };\n\n  const toggleLeak = () => {\n    setLeak(!leak);\n  };\n\n  const handleSelectCategory = c => {\n    onSelect(c);\n    setCategory(c);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => toggleLeak(),\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(styles.selectCategory),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/${category === null || category === void 0 ? void 0 : category.slug}.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: styles.selectCategoryText,\n        children: category === null || category === void 0 ? void 0 : category.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ActiveSvg, {\n      leak: leak\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), leak && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.newPop,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: categories.map((c, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectCategory(c),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/${c.slug}.png`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), c.name]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/SelectCategory/index.tsx"],"names":["styles","React","useState","Typography","clsx","ActiveSvg","props","transform","leak","SelectCategory","categories","onSelect","selectedCategory","category","setCategory","visiable","setVisiable","setLeak","toggleVisible","toggleLeak","handleSelectCategory","c","root","selectCategory","slug","selectCategoryText","name","newPop","map","idx"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AAIA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AASA,SAASC,SAAT,CAAmBC,KAAnB,EAA6C;AACzC,sBAAO;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAG,GAAED,KAAK,CAACE,IAAN,GAAa,cAAb,GAA8B,gBAAiB;AAA/D,KAAZ;AAAgF,IAAA,KAAK,EAAC,GAAtF;AAA0F,IAAA,MAAM,EAAC,GAAjG;AAAqG,IAAA,OAAO,EAAC,SAA7G;AAAuH,IAAA,IAAI,EAAC,MAA5H;AACK,IAAA,KAAK,EAAC,4BADX;AAAA,2BAEH;AAAM,MAAA,CAAC,EAAC,kBAAR;AAA2B,MAAA,MAAM,EAAC,SAAlC;AAA4C,MAAA,WAAW,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA;AAFG;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;AAED,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA;AAAvB,CAAD,KAAqD;AAC/E,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAACU,gBAAD,CAAxC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bf,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOS,OAAP,IAAkBhB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMgB,aAAa,GAAG,MAAM;AACxBF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAGA,QAAMI,UAAU,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAAC,CAACT,IAAF,CAAP;AACH,GAFD;;AAIA,QAAMY,oBAAoB,GAAIC,CAAD,IAAiB;AAC1CV,IAAAA,QAAQ,CAACU,CAAD,CAAR;AACAP,IAAAA,WAAW,CAACO,CAAD,CAAX;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,OAAO,EAAE,MAAMF,UAAU,EAA9B;AAAkC,IAAA,SAAS,EAAEnB,MAAM,CAACsB,IAApD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAElB,IAAI,CAACJ,MAAM,CAACuB,cAAR,CAApB;AAAA,8BACI;AAAK,QAAA,GAAG,EAAG,IAAGV,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEW,IAAK;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAExB,MAAM,CAACyB,kBAA9B;AAAA,kBACKZ,QADL,aACKA,QADL,uBACKA,QAAQ,CAAEa;AADf;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAElB;AAAjB;AAAA;AAAA;AAAA;AAAA,YATJ,EAWQA,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAER,MAAM,CAAC2B,MAAvB;AAAA,6BACJ;AAAA,kBACKjB,UAAU,CAACkB,GAAX,CAAe,CAACP,CAAD,EAAIQ,GAAJ,KAAY;AACxB,8BACI;AAAc,YAAA,OAAO,EAAE,MAAMT,oBAAoB,CAACC,CAAD,CAAjD;AAAA,oCACI;AAAK,cAAA,GAAG,EAAG,IAAGA,CAAC,CAACG,IAAK;AAArB;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKH,CAAC,CAACK,IAFP;AAAA,aAASG,GAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAMH,SAPA;AADL;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YAXhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA5CM","sourcesContent":["import styles from \"./SelectCategory.module.scss\";\r\nimport {Button} from \"../Button\";\r\nimport {Category} from \"../../interfaces\";\r\nimport {MenuList} from \"../MenuList\";\r\nimport React, {useState} from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\ntype Props = {\r\n    categories: Category[],\r\n    onSelect: (category: Category) => void,\r\n    selectedCategory?: Category\r\n}\r\n\r\n\r\nfunction ActiveSvg(props: { leak: boolean }) {\r\n    return <svg style={{ transform: `${props.leak ? 'rotate(0deg)' : 'rotate(180deg)'}` }} width=\"9\" height=\"6\" viewBox=\"0 0 9 6\" fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M1 1L4.5 4.5L8 1\" stroke=\"#D0D0DD\" strokeWidth=\"1.3\"/>\r\n    </svg>;\r\n}\r\n\r\nexport const SelectCategory = ({categories, onSelect, selectedCategory}: Props) => {\r\n    const [category, setCategory] = useState(selectedCategory)\r\n    const [visiable, setVisiable] = React.useState(false);\r\n    const [leak, setLeak] = React.useState(false);\r\n\r\n    const toggleVisible = () => {\r\n        setVisiable(!visiable);\r\n    }\r\n    const toggleLeak = () => {\r\n        setLeak(!leak);\r\n    }\r\n\r\n    const handleSelectCategory = (c: Category) => {\r\n        onSelect(c);\r\n        setCategory(c);\r\n    }\r\n\r\n    return (\r\n        <div onClick={() => toggleLeak()} className={styles.root}>\r\n            <div className={clsx(styles.selectCategory)}>\r\n                <img src={`/${category?.slug}.png`}/>\r\n\r\n                <Typography className={styles.selectCategoryText}>\r\n                    {category?.name}\r\n                </Typography>\r\n\r\n            </div>\r\n            <ActiveSvg leak={leak} />\r\n            {\r\n                leak && <div className={styles.newPop}>\r\n                    <ul>\r\n                        {categories.map((c, idx) => {\r\n                            return (\r\n                                <li key={idx} onClick={() => handleSelectCategory(c)}>\r\n                                    <img src={`/${c.slug}.png`}/>\r\n                                    {c.name}\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}