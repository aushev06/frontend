{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\Tags\\\\index.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport Link from 'next/link';\nimport styles from './Tags.module.scss';\nimport { Button } from '../Button';\n\nvar Tag = function Tag(_ref) {\n  var theme = _ref.theme,\n      _onClick = _ref.onClick,\n      isActive = _ref.isActive;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: theme.name,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: function onClick() {\n        return _onClick(theme);\n      },\n      className: styles.tag,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.btn,\n        variant: isActive ? 'text' : 'text',\n        children: theme.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Tag;\nexport var Tags = function Tags(_ref2) {\n  var items = _ref2.items,\n      handleSelect = _ref2.handleSelect,\n      selectedItems = _ref2.selectedItems;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: items.map(function (obj) {\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        theme: obj,\n        onClick: handleSelect,\n        isActive: !!(selectedItems !== null && selectedItems !== void 0 && selectedItems.find(function (t) {\n          return +t.id === +obj.id;\n        }))\n      }, obj.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n};\n_c2 = Tags;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tag\");\n$RefreshReg$(_c2, \"Tags\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/Tags/index.tsx"],"names":["React","Link","styles","Button","Tag","theme","onClick","isActive","name","tag","btn","Tags","items","handleSelect","selectedItems","map","obj","find","t","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,SAASC,MAAT,QAAuB,WAAvB;;AAIA,IAAMC,GAAsB,GAAG,SAAzBA,GAAyB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,QAAV,QAAUA,OAAV;AAAA,MAAmBC,QAAnB,QAAmBA,QAAnB;AAAA,sBAC7B,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,KAAK,CAACG,IAAlB;AAAA,2BACE;AAAG,MAAA,OAAO,EAAE;AAAA,eAAMF,QAAO,CAACD,KAAD,CAAb;AAAA,OAAZ;AAAkC,MAAA,SAAS,EAAEH,MAAM,CAACO,GAApD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEP,MAAM,CAACQ,GAA1B;AAA+B,QAAA,OAAO,EAAEH,QAAQ,GAAG,MAAH,GAAY,MAA5D;AAAA,kBACKF,KAAK,CAACG;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WAD6B;AAAA,CAA/B;;KAAMJ,G;AAUN,OAAO,IAAMO,IAA4F,GAAG,SAA/FA,IAA+F,QAA4C;AAAA,MAAzCC,KAAyC,SAAzCA,KAAyC;AAAA,MAAlCC,YAAkC,SAAlCA,YAAkC;AAAA,MAApBC,aAAoB,SAApBA,aAAoB;AACtJ,sBACE;AAAA,cACGF,KAAK,CAACG,GAAN,CAAU,UAACC,GAAD;AAAA,0BACT,QAAC,GAAD;AAAoB,QAAA,KAAK,EAAEA,GAA3B;AAAgC,QAAA,OAAO,EAAEH,YAAzC;AAAuD,QAAA,QAAQ,EAAE,CAAC,EAACC,aAAD,aAACA,aAAD,eAACA,aAAa,CAAEG,IAAf,CAAoB,UAAAC,CAAC;AAAA,iBAAI,CAACA,CAAC,CAACC,EAAH,KAAU,CAACH,GAAG,CAACG,EAAnB;AAAA,SAArB,CAAD;AAAlE,SAAUH,GAAG,CAACR,IAAd;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAV;AADH,mBADF;AAOD,CARM;MAAMG,I","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\n\r\nimport styles from './Tags.module.scss';\r\nimport {Theme} from \"../../interfaces\";\r\nimport { Button } from '../Button';\r\n\r\ntype TagItem = { theme: Theme, onClick?: (t: Theme) => void, isActive: boolean};\r\n\r\nconst Tag: React.FC<TagItem> = ({ theme, onClick, isActive }) => (\r\n  <Link href={theme.name}>\r\n    <a onClick={() => onClick(theme)} className={styles.tag}>\r\n        <Button className={styles.btn} variant={isActive ? 'text' : 'text'}>\r\n            {theme.name}\r\n        </Button>\r\n    </a>\r\n  </Link>\r\n);\r\n\r\nexport const Tags: React.FC<{ items: Theme[], selectedItems: Theme[], handleSelect: (t: Theme) => void }> = ({ items, handleSelect, selectedItems }) => {\r\n  return (\r\n    <>\r\n      {items.map((obj) => (\r\n        <Tag key={obj.name} theme={obj} onClick={handleSelect} isActive={!!selectedItems?.find(t => +t.id === +obj.id)} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}