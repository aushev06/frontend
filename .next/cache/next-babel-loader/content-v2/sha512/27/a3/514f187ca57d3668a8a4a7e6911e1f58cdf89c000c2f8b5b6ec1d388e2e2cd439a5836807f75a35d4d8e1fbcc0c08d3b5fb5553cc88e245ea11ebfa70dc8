{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\SearchPopup\\\\index.tsx\";\nimport React, { useState } from 'react';\nimport styles from './SearchPopup.module.scss';\nimport Item from './Item';\nimport { getSpecialists } from \"../../services/api/SpecialistsApi\";\nimport { useSelector } from \"react-redux\";\nimport { selectThemesState } from \"../../redux/directory/directory.selector\";\nimport { CommentApi } from \"../../services/api/CommentApi\";\nimport { getPosts } from \"../../services/api/PostApi\";\n\nconst SearchPopup = ({\n  isSearch,\n  searchInput\n}) => {\n  const {\n    0: authors,\n    1: setAuthors\n  } = useState([]);\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: comments,\n    1: setComments\n  } = useState([]);\n  const themes = useSelector(selectThemesState).filter(theme => theme.name.includes(searchInput));\n  React.useEffect(() => {\n    getSpecialists({\n      name: searchInput\n    }).then(users => {\n      setAuthors(users.data);\n    });\n    CommentApi.get({\n      text: searchInput\n    }).then(response => {\n      setComments(response);\n    });\n    getPosts({\n      title: searchInput\n    }).then(response => {\n      setPosts(response.data);\n    });\n  }, [searchInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        title: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\",\n        data: authors.map(user => ({\n          id: user.id,\n          name: user.name,\n          link: `/profile/${user.id}`\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        title: \"\\u041F\\u0443\\u0431\\u043B\\u0438\\u043A\\u0430\\u0446\\u0438\\u0438\",\n        data: posts.map(post => ({\n          id: post.id,\n          name: post.title,\n          link: `/post/${post.slug}`\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        title: \"\\u0422\\u044D\\u0433\\u0438\",\n        data: themes.map(theme => ({\n          id: theme.id,\n          name: theme.name,\n          link: '/themes'\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        title: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\",\n        data: comments.map(comment => ({\n          id: comment.id,\n          name: comment.text,\n          link: `/post/${comment.post.slug}`\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.footer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"mr-10\",\n        src: \"/arrow-link.svg\",\n        alt: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B \\u043F\\u043E \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u0443 \\u201C\", searchInput, \"\\u201D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\nexport default SearchPopup;","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/SearchPopup/index.tsx"],"names":["React","useState","styles","Item","getSpecialists","useSelector","selectThemesState","CommentApi","getPosts","SearchPopup","isSearch","searchInput","authors","setAuthors","posts","setPosts","comments","setComments","themes","filter","theme","name","includes","useEffect","then","users","data","get","text","response","title","container","body","map","user","id","link","post","slug","comment","footer"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport styles from './SearchPopup.module.scss';\r\nimport Item from './Item';\r\nimport {getSpecialists} from \"../../services/api/SpecialistsApi\";\r\nimport {Comment, PostData, Theme, User} from \"../../interfaces\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectThemesState} from \"../../redux/directory/directory.selector\";\r\nimport {CommentApi} from \"../../services/api/CommentApi\";\r\nimport {getPosts} from \"../../services/api/PostApi\";\r\n\r\ninterface SearchPopupProps {\r\n    isSearch: boolean;\r\n    searchInput: string;\r\n\r\n}\r\n\r\nconst SearchPopup: React.FC<SearchPopupProps> = ({isSearch, searchInput}) => {\r\n    const [authors, setAuthors] = useState<User[]>([])\r\n    const [posts, setPosts] = useState<PostData[]>([])\r\n    const [comments, setComments] = useState<Comment[]>([])\r\n    const themes = useSelector(selectThemesState).filter(theme => theme.name.includes(searchInput));\r\n    \r\n    React.useEffect(() => {\r\n        getSpecialists({name: searchInput}).then(users => {\r\n            setAuthors(users.data)\r\n        })\r\n\r\n        CommentApi.get({text: searchInput}).then(response => {\r\n            setComments(response);\r\n        });\r\n\r\n        getPosts({title: searchInput}).then(response => {\r\n            setPosts(response.data);\r\n        })\r\n\r\n\r\n    }, [searchInput])\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.body}>\r\n                <Item title=\"Авторы\" data={authors.map(user => ({\r\n                    id: user.id,\r\n                    name: user.name,\r\n                    link: `/profile/${user.id}`\r\n                }))}/>\r\n                <Item title=\"Публикации\" data={posts.map(post => ({\r\n                    id: post.id,\r\n                    name: post.title,\r\n                    link: `/post/${post.slug}`\r\n                }))}/>\r\n                <Item title=\"Тэги\" data={themes.map(theme => ({\r\n                    id: theme.id,\r\n                    name: theme.name,\r\n                    link: '/themes'\r\n                }))}/>\r\n                <Item title=\"Коментарии\" data={comments.map(comment => ({\r\n                    id: comment.id,\r\n                    name: comment.text,\r\n                    link: `/post/${comment.post.slug}`\r\n                }))}/>\r\n                {/*<Item title=\"Авторы\" data={searchData.podcasts}/>*/}\r\n            </div>\r\n            <div className={styles.footer}>\r\n                <img className=\"mr-10\" src=\"/arrow-link.svg\" alt=\"Поиск\"/>\r\n                <a>Показать все результаты по запросу “{searchInput}”</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPopup;\r\n"]},"metadata":{},"sourceType":"module"}