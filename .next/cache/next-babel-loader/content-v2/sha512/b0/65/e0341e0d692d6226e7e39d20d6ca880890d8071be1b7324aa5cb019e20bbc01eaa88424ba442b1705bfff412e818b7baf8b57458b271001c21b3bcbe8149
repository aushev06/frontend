{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\AddCommentBlock\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from './CommentBlock.module.scss';\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nexport var AddCommentBlock = function AddCommentBlock(_ref) {\n  _s();\n\n  var onAddComment = _ref.onAddComment,\n      toUser = _ref.toUser,\n      parentComment = _ref.parentComment;\n\n  var _useState = useState(false),\n      isClicked = _useState[0],\n      setIsClicked = _useState[1];\n\n  var _useState2 = useState(toUser ? \"@\".concat(toUser.name, \",\") : ''),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var handleAddComment = function handleAddComment() {\n    onAddComment(text, toUser === null || toUser === void 0 ? void 0 : toUser.id, (parentComment === null || parentComment === void 0 ? void 0 : parentComment.parent_id) || (parentComment === null || parentComment === void 0 ? void 0 : parentComment.id));\n    setText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.comment,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onFocus: function onFocus() {\n        return setIsClicked(true);\n      },\n      classes: {\n        root: styles.fieldRoot\n      },\n      multiline: true,\n      placeholder: 'Написать комментарий...',\n      fullWidth: true,\n      minRows: !isClicked ? 1 : 5,\n      onChange: function onChange(e) {\n        return setText(e.target.value);\n      },\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, _this), isClicked && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAddComment,\n      color: 'secondary',\n      className: styles.addButton,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AddCommentBlock, \"5Ze2RcEFZfkffsIQTOxF/noLsLs=\");\n\n_c = AddCommentBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCommentBlock\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/AddCommentBlock/index.tsx"],"names":["React","useState","styles","Input","Button","AddCommentBlock","onAddComment","toUser","parentComment","isClicked","setIsClicked","name","text","setText","handleAddComment","id","parent_id","comment","root","fieldRoot","e","target","value","addButton"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAQA,OAAO,IAAMC,eAAgC,GAAG,SAAnCA,eAAmC,OAA6C;AAAA;;AAAA,MAA1CC,YAA0C,QAA1CA,YAA0C;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAAA,kBACvDP,QAAQ,CAAC,KAAD,CAD+C;AAAA,MAClFQ,SADkF;AAAA,MACvEC,YADuE;;AAAA,mBAEjET,QAAQ,CAACM,MAAM,cAAOA,MAAM,CAACI,IAAd,SAAwB,EAA/B,CAFyD;AAAA,MAElFC,IAFkF;AAAA,MAE5EC,OAF4E;;AAIzF,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BR,IAAAA,YAAY,CAACM,IAAD,EAAOL,MAAP,aAAOA,MAAP,uBAAOA,MAAM,CAAEQ,EAAf,EAAmB,CAAAP,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEQ,SAAf,MAA4BR,aAA5B,aAA4BA,aAA5B,uBAA4BA,aAAa,CAAEO,EAA3C,CAAnB,CAAZ;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACe,OAAvB;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,OAAO,EAAE;AAAA,eAAMP,YAAY,CAAC,IAAD,CAAlB;AAAA,OADb;AAEI,MAAA,OAAO,EAAE;AAACQ,QAAAA,IAAI,EAAEhB,MAAM,CAACiB;AAAd,OAFb;AAEuC,MAAA,SAAS,MAFhD;AAEiD,MAAA,WAAW,EAAE,yBAF9D;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,OAAO,EAAE,CAACV,SAAD,GAAa,CAAb,GAAiB,CAJ9B;AAKI,MAAA,QAAQ,EAAE,kBAAAW,CAAC;AAAA,eAAIP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAAA,OALf;AAMI,MAAA,KAAK,EAAEV;AANX;AAAA;AAAA;AAAA;AAAA,aADJ,EAUKH,SAAS,iBAAI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,gBAAjB;AAAmC,MAAA,KAAK,EAAE,WAA1C;AAAuD,MAAA,SAAS,EAAEZ,MAAM,CAACqB,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVlB;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAcH,CAvBM;;GAAMlB,e;;KAAAA,e","sourcesContent":["import React, {useState} from \"react\";\r\nimport styles from './CommentBlock.module.scss';\r\nimport Input from \"@mui/material/Input\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Comment, User} from \"../../interfaces\";\r\n\r\ntype Props = {\r\n    onAddComment: (data: string, userId?: number, parentCommentId?: number) => void;\r\n    toUser?: User;\r\n    parentComment?: Comment;\r\n}\r\nexport const AddCommentBlock: React.FC<Props> = ({ onAddComment, toUser, parentComment }) => {\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const [text, setText] = useState(toUser ? `@${toUser.name},` : '');\r\n\r\n    const handleAddComment = () => {\r\n        onAddComment(text, toUser?.id, parentComment?.parent_id || parentComment?.id)\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <div className={styles.comment}>\r\n            <Input\r\n                onFocus={() => setIsClicked(true)}\r\n                classes={{root: styles.fieldRoot}} multiline placeholder={'Написать комментарий...'}\r\n                fullWidth\r\n                minRows={!isClicked ? 1 : 5}\r\n                onChange={e => setText(e.target.value)}\r\n                value={text}\r\n            />\r\n\r\n            {isClicked && <Button onClick={handleAddComment} color={'secondary'} className={styles.addButton}>Отправить</Button>}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}