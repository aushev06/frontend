{"ast":null,"code":"import _slicedToArray from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\SelectFilterField\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport styles from \"./SelectFilterField.module.scss\";\nimport { Button } from \"../Button\";\nimport React, { useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nfunction ActiveSvg(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      transform: \"\".concat(props.leak ? 'rotate(0deg)' : 'rotate(180deg)')\n    },\n    width: \"9\",\n    height: \"6\",\n    viewBox: \"0 0 9 6\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M1 1L4.5 4.5L8 1\",\n      stroke: \"#D0D0DD\",\n      strokeWidth: \"1.3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\n\n_c = ActiveSvg;\nexport var SelectFilterField = function SelectFilterField(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      onSelect = _ref.onSelect,\n      selectedField = _ref.selectedField;\n\n  var _useState = useState(selectedField ? selectedField : fields[0]),\n      field = _useState[0],\n      setField = _useState[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visiable = _React$useState2[0],\n      setVisiable = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      leak = _React$useState4[0],\n      setLeak = _React$useState4[1];\n\n  var toggleVisible = function toggleVisible() {\n    setVisiable(!visiable);\n  };\n\n  var toggleLeak = function toggleLeak() {\n    setLeak(!leak);\n  };\n\n  var handleSelect = function handleSelect(fld) {\n    setField(fld);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: function onClick() {\n      return toggleLeak();\n    },\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(styles.selectCategory),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.activeBtn,\n        onClick: function onClick() {},\n        variant: 'outlined',\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.selectCategoryText,\n          children: [field, \"             \", /*#__PURE__*/_jsxDEV(ActiveSvg, {\n            leak: leak\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 45\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this), leak && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.newPop,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fields.map(function (f, idx) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: function onClick() {\n              return handleSelect(f);\n            },\n            children: f\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(SelectFilterField, \"tUnQaDqAqWEtiwUhs+0G1Xur/B8=\");\n\n_c2 = SelectFilterField;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActiveSvg\");\n$RefreshReg$(_c2, \"SelectFilterField\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/SelectFilterField/index.tsx"],"names":["styles","Button","React","useState","Typography","clsx","ActiveSvg","props","transform","leak","SelectFilterField","fields","onSelect","selectedField","field","setField","visiable","setVisiable","setLeak","toggleVisible","toggleLeak","handleSelect","fld","root","selectCategory","activeBtn","selectCategoryText","newPop","map","f","idx"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,iCAAnB;AACA,SAAQC,MAAR,QAAqB,WAArB;AAGA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AASA,SAASC,SAAT,CAAmBC,KAAnB,EAA6C;AACzC,sBAAO;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,YAAKD,KAAK,CAACE,IAAN,GAAa,cAAb,GAA8B,gBAAnC;AAAX,KAAZ;AAAgF,IAAA,KAAK,EAAC,GAAtF;AAA0F,IAAA,MAAM,EAAC,GAAjG;AAAqG,IAAA,OAAO,EAAC,SAA7G;AAAuH,IAAA,IAAI,EAAC,MAA5H;AACK,IAAA,KAAK,EAAC,4BADX;AAAA,2BAEH;AAAM,MAAA,CAAC,EAAC,kBAAR;AAA2B,MAAA,MAAM,EAAC,SAAlC;AAA4C,MAAA,WAAW,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA;AAFG;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;KALQH,S;AAOT,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,OAA8C;AAAA;;AAAA,MAA5CC,MAA4C,QAA5CA,MAA4C;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,aAA0B,QAA1BA,aAA0B;;AAAA,kBACjDV,QAAQ,CAACU,aAAa,GAAGA,aAAH,GAAmBF,MAAM,CAAC,CAAD,CAAvC,CADyC;AAAA,MACpEG,KADoE;AAAA,MAC7DC,QAD6D;;AAAA,wBAE3Cb,KAAK,CAACC,QAAN,CAAe,KAAf,CAF2C;AAAA;AAAA,MAEpEa,QAFoE;AAAA,MAE1DC,WAF0D;;AAAA,yBAGnDf,KAAK,CAACC,QAAN,CAAe,KAAf,CAHmD;AAAA;AAAA,MAGpEM,IAHoE;AAAA,MAG9DS,OAH8D;;AAK3E,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAGA,MAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBF,IAAAA,OAAO,CAAC,CAACT,IAAF,CAAP;AACH,GAFD;;AAIA,MAAMY,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAiB;AAClCP,IAAAA,QAAQ,CAACO,GAAD,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMF,UAAU,EAAhB;AAAA,KAAd;AAAkC,IAAA,SAAS,EAAEpB,MAAM,CAACuB,IAApD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAElB,IAAI,CAACL,MAAM,CAACwB,cAAR,CAApB;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAExB,MAAM,CAACyB,SAA1B;AAAqC,QAAA,OAAO,EAAE,mBAAM,CAAE,CAAtD;AAAwD,QAAA,OAAO,EAAE,UAAjE;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEzB,MAAM,CAAC0B,kBAA9B;AAAA,qBACKZ,KADL,gCACwB,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEL;AAAjB;AAAA;AAAA;AAAA;AAAA,mBADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,EAWQA,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAET,MAAM,CAAC2B,MAAvB;AAAA,6BACJ;AAAA,kBACKhB,MAAM,CAACiB,GAAP,CAAW,UAACC,CAAD,EAAIC,GAAJ,EAAY;AACpB,8BACI;AAAc,YAAA,OAAO,EAAE;AAAA,qBAAMT,YAAY,CAACQ,CAAD,CAAlB;AAAA,aAAvB;AAAA,sBACKA;AADL,aAASC,GAAT;AAAA;AAAA;AAAA;AAAA,mBADJ;AAKH,SANA;AADL;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,aAXhB;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA0BH,CA1CM;;GAAMpB,iB;;MAAAA,iB","sourcesContent":["import styles from \"./SelectFilterField.module.scss\";\r\nimport {Button} from \"../Button\";\r\nimport {Category} from \"../../interfaces\";\r\nimport {MenuList} from \"../MenuList\";\r\nimport React, {useState} from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\ntype Props = {\r\n    fields: string[],\r\n    onSelect: (field: string) => void,\r\n    selectedField?: string\r\n}\r\n\r\n\r\nfunction ActiveSvg(props: { leak: boolean }) {\r\n    return <svg style={{ transform: `${props.leak ? 'rotate(0deg)' : 'rotate(180deg)'}` }} width=\"9\" height=\"6\" viewBox=\"0 0 9 6\" fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M1 1L4.5 4.5L8 1\" stroke=\"#D0D0DD\" strokeWidth=\"1.3\"/>\r\n    </svg>;\r\n}\r\n\r\nexport const SelectFilterField = ({fields, onSelect, selectedField}: Props) => {\r\n    const [field, setField] = useState(selectedField ? selectedField : fields[0])\r\n    const [visiable, setVisiable] = React.useState(false);\r\n    const [leak, setLeak] = React.useState(false);\r\n\r\n    const toggleVisible = () => {\r\n        setVisiable(!visiable);\r\n    }\r\n    const toggleLeak = () => {\r\n        setLeak(!leak);\r\n    }\r\n\r\n    const handleSelect = (fld: string) => {\r\n        setField(fld);\r\n    }\r\n\r\n    return (\r\n        <div onClick={() => toggleLeak()} className={styles.root}>\r\n            <div className={clsx(styles.selectCategory)}>\r\n                <Button className={styles.activeBtn} onClick={() => {}} variant={'outlined'}>\r\n                    <Typography className={styles.selectCategoryText}>\r\n                        {field}             <ActiveSvg leak={leak} />\r\n\r\n                    </Typography>\r\n                </Button>\r\n\r\n            </div>\r\n            {\r\n                leak && <div className={styles.newPop}>\r\n                    <ul>\r\n                        {fields.map((f, idx) => {\r\n                            return (\r\n                                <li key={idx} onClick={() => handleSelect(f)}>\r\n                                    {f}\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}