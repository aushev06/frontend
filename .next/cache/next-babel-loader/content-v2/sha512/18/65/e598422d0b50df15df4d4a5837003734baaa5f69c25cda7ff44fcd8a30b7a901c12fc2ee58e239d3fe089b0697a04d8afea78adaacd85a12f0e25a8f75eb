{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\Dropdown\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport MenuList from '@material-ui/core/MenuList';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport clsx from 'clsx';\nimport React from 'react';\nimport styles from './Dropdown.module.scss';\nexport var Dropdown = function Dropdown(_ref) {\n  _s();\n\n  var _children = _ref.children,\n      classes = _ref.classes,\n      overlay = _ref.overlay,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom-end' : _ref$placement;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef(null);\n\n  var handleToggle = function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n  };\n\n  var handleClose = function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: anchorRef,\n      onClick: handleToggle,\n      tabIndex: 0,\n      onKeyDown: handleToggle,\n      role: \"button\",\n      \"aria-pressed\": \"false\",\n      className: clsx(styles.root),\n      children: overlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Popper, {\n      open: open,\n      anchorEl: anchorRef.current,\n      className: clsx(styles.popper, classes === null || classes === void 0 ? void 0 : classes.popper),\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      placement: placement,\n      children: function children(_ref2) {\n        var TransitionProps = _ref2.TransitionProps;\n        return /*#__PURE__*/_jsxDEV(Grow, _objectSpread(_objectSpread({}, TransitionProps), {}, {\n          style: {\n            transformOrigin: 'center top'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            className: clsx(styles.paper, classes === null || classes === void 0 ? void 0 : classes.paper),\n            children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n              onClickAway: handleClose,\n              children: /*#__PURE__*/_jsxDEV(MenuList, {\n                autoFocusItem: open,\n                id: \"menu-list-grow\",\n                onKeyDown: handleListKeyDown,\n                onClick: handleClose,\n                children: _children\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Dropdown, \"FIn954K0DtsWqXZkIayVtQWUhUQ=\");\n\n_c = Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/Dropdown/index.tsx"],"names":["ClickAwayListener","Grow","MenuList","Paper","Popper","clsx","React","styles","Dropdown","children","classes","overlay","placement","useState","open","setOpen","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","root","popper","undefined","TransitionProps","transformOrigin","paper"],"mappings":"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","sourcesContent":["import ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { PopperPlacementType } from '@material-ui/core/Popper/Popper';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\n\r\nimport styles from './Dropdown.module.scss';\r\n\r\ninterface DropdownProps {\r\n  classes?: {\r\n    paper?: string;\r\n    popper?: string;\r\n    root?: string;\r\n  };\r\n  overlay: React.ReactElement;\r\n  placement?: PopperPlacementType;\r\n}\r\n\r\nexport const Dropdown: React.FC<DropdownProps> = ({\r\n  children,\r\n  classes,\r\n  overlay,\r\n  placement = 'bottom-end',\r\n}): React.ReactElement => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const handleToggle = (): void => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event: React.MouseEvent<EventTarget>): void => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event: React.KeyboardEvent): void {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={anchorRef}\r\n        onClick={handleToggle}\r\n        tabIndex={0}\r\n        onKeyDown={handleToggle}\r\n        role=\"button\"\r\n        aria-pressed=\"false\"\r\n        className={clsx(styles.root)}\r\n      >\r\n        {overlay}\r\n      </div>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        className={clsx(styles.popper, classes?.popper)}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n        placement={placement}\r\n      >\r\n        {({ TransitionProps }): React.ReactElement => (\r\n          <Grow {...TransitionProps} style={{ transformOrigin: 'center top' }}>\r\n            <Paper elevation={0} className={clsx(styles.paper, classes?.paper)}>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown} onClick={handleClose}>\r\n                  {children}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}