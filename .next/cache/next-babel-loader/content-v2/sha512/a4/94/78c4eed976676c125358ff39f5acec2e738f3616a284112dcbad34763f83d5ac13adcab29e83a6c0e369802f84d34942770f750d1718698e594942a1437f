{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\Editor\\\\Editor.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useRef } from \"react\";\nimport { saveByUrl, saveImage } from \"../../services/api/PostApi\";\nexport function EditorJsWrapper(_ref) {\n  _s();\n\n  var _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      blocks = _ref.blocks,\n      restProps = _objectWithoutProperties(_ref, [\"config\", \"blocks\"]);\n\n  var elmtRef = useRef();\n  useEffect(function () {\n    if (!elmtRef.current) {\n      return;\n    } // @ts-ignore\n\n\n    var editorJs;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$import, EditorJS, _yield$import2, Header, _yield$import3, ImageTool, _yield$import4, Code, _yield$import5, Quote, _yield$import6, List;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return import(\"@editorjs/editorjs\");\n\n            case 2:\n              _yield$import = _context3.sent;\n              EditorJS = _yield$import[\"default\"];\n              _context3.next = 6;\n              return import('@editorjs/header');\n\n            case 6:\n              _yield$import2 = _context3.sent;\n              Header = _yield$import2[\"default\"];\n              _context3.next = 10;\n              return import('@editorjs/image');\n\n            case 10:\n              _yield$import3 = _context3.sent;\n              ImageTool = _yield$import3[\"default\"];\n              _context3.next = 14;\n              return import('@editorjs/code');\n\n            case 14:\n              _yield$import4 = _context3.sent;\n              Code = _yield$import4[\"default\"];\n              _context3.next = 18;\n              return import('@editorjs/quote');\n\n            case 18:\n              _yield$import5 = _context3.sent;\n              Quote = _yield$import5[\"default\"];\n              _context3.next = 22;\n              return import('@editorjs/list');\n\n            case 22:\n              _yield$import6 = _context3.sent;\n              List = _yield$import6[\"default\"];\n              editorJs = new EditorJS(_objectSpread(_objectSpread({}, config), {}, {\n                holder: elmtRef.current,\n                tools: {\n                  header: {\n                    \"class\": Header,\n                    inlineToolbar: true,\n                    config: {\n                      placeholder: 'Введите заголовок'\n                    }\n                  },\n                  Code: Code,\n                  Quote: Quote,\n                  List: List,\n                  image: {\n                    \"class\": ImageTool,\n                    config: {\n                      uploader: {\n                        uploadByFile: function () {\n                          var _uploadByFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(image) {\n                            var data;\n                            return _regeneratorRuntime.wrap(function _callee$(_context) {\n                              while (1) {\n                                switch (_context.prev = _context.next) {\n                                  case 0:\n                                    _context.next = 2;\n                                    return saveImage(image);\n\n                                  case 2:\n                                    data = _context.sent;\n                                    return _context.abrupt(\"return\", data.data);\n\n                                  case 4:\n                                  case \"end\":\n                                    return _context.stop();\n                                }\n                              }\n                            }, _callee);\n                          }));\n\n                          function uploadByFile(_x) {\n                            return _uploadByFile.apply(this, arguments);\n                          }\n\n                          return uploadByFile;\n                        }(),\n                        uploadByUrl: function () {\n                          var _uploadByUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url) {\n                            var data;\n                            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    _context2.next = 2;\n                                    return saveByUrl(url);\n\n                                  case 2:\n                                    data = _context2.sent;\n                                    return _context2.abrupt(\"return\", data.data);\n\n                                  case 4:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, _callee2);\n                          }));\n\n                          function uploadByUrl(_x2) {\n                            return _uploadByUrl.apply(this, arguments);\n                          }\n\n                          return uploadByUrl;\n                        }()\n                      }\n                    }\n                  }\n                },\n\n                /**\r\n                 * Previously saved data that should be rendered\r\n                 */\n                data: {\n                  blocks: blocks\n                }\n              }));\n\n            case 25:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))()[\"catch\"](function (error) {\n      return console.error(error);\n    });\n\n    return function () {\n      // @ts-ignore\n      editorJs.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, restProps), {}, {\n    ref: function ref(elmt) {\n      // @ts-ignore\n      elmtRef.current = elmt;\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditorJsWrapper, \"9vPoGymCLLAO2DB+TRTH5hyTVaY=\");\n\n_c = EditorJsWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorJsWrapper\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/Editor/Editor.tsx"],"names":["useEffect","useRef","saveByUrl","saveImage","EditorJsWrapper","config","blocks","restProps","elmtRef","current","editorJs","EditorJS","Header","ImageTool","Code","Quote","List","holder","tools","header","inlineToolbar","placeholder","image","uploader","uploadByFile","data","uploadByUrl","url","error","console","destroy","elmt"],"mappings":";;;;;;;;;;;;;AACA,SAAwBA,SAAxB,EAAmCC,MAAnC,QAAgD,OAAhD;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,4BAAnC;AAOA,OAAO,SAASC,eAAT,OAAiG;AAAA;;AAAA,yBAAvEC,MAAuE;AAAA,MAAvEA,MAAuE,4BAA9D,EAA8D;AAAA,MAA1DC,MAA0D,QAA1DA,MAA0D;AAAA,MAA/CC,SAA+C;;AACpG,MAAMC,OAAO,GAAGP,MAAM,EAAtB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACQ,OAAO,CAACC,OAAb,EAAsB;AAClB;AACH,KAHW,CAKZ;;;AACA,QAAIC,QAAJ;;AAEA,6DAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACqC,OAAO,oBAAP,CADrC;;AAAA;AAAA;AACmBC,cAAAA,QADnB;AAAA;AAAA,qBAGmC,OAAO,kBAAP,CAHnC;;AAAA;AAAA;AAGmBC,cAAAA,MAHnB;AAAA;AAAA,qBAKuC,OAAO,iBAAP,CALvC;;AAAA;AAAA;AAKmBC,cAAAA,SALnB;AAAA;AAAA,qBAQkC,OAAO,gBAAP,CARlC;;AAAA;AAAA;AAQmBC,cAAAA,IARnB;AAAA;AAAA,qBAWmC,OAAO,iBAAP,CAXnC;;AAAA;AAAA;AAWmBC,cAAAA,KAXnB;AAAA;AAAA,qBAckC,OAAO,gBAAP,CAdlC;;AAAA;AAAA;AAcmBC,cAAAA,IAdnB;AAgBGN,cAAAA,QAAQ,GAAG,IAAIC,QAAJ,iCACJN,MADI;AAEPY,gBAAAA,MAAM,EAAET,OAAO,CAACC,OAFT;AAGPS,gBAAAA,KAAK,EAAE;AACHC,kBAAAA,MAAM,EAAE;AACJ,6BAAOP,MADH;AAEJQ,oBAAAA,aAAa,EAAE,IAFX;AAGJf,oBAAAA,MAAM,EAAE;AACJgB,sBAAAA,WAAW,EAAE;AADT;AAHJ,mBADL;AAQHP,kBAAAA,IAAI,EAAJA,IARG;AASHC,kBAAAA,KAAK,EAALA,KATG;AAUHC,kBAAAA,IAAI,EAAJA,IAVG;AAWHM,kBAAAA,KAAK,EAAE;AACH,6BAAOT,SADJ;AAEHR,oBAAAA,MAAM,EAAE;AACJkB,sBAAAA,QAAQ,EAAE;AACNC,wBAAAA,YAAY;AAAA,uGAAE,iBAAOF,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACSnB,SAAS,CAACmB,KAAD,CADlB;;AAAA;AACJG,oCAAAA,IADI;AAAA,qEAEHA,IAAI,CAACA,IAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,2BADN;AAKNC,wBAAAA,WAAW;AAAA,sGAAE,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACSzB,SAAS,CAACyB,GAAD,CADlB;;AAAA;AACJF,oCAAAA,IADI;AAAA,sEAEHA,IAAI,CAACA,IAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALL;AADN;AAFL;AAXJ,iBAHA;;AA+BP;AAChB;AACA;AACgBA,gBAAAA,IAAI,EAAE;AACFnB,kBAAAA,MAAM,EAANA;AADE;AAlCC,iBAAX;;AAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,cAsDW,UAACsB,KAAD;AAAA,aAAiBC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAjB;AAAA,KAtDX;;AAwDA,WAAO,YAAY;AACf;AACAlB,MAAAA,QAAQ,CAACoB,OAAT;AACH,KAHD;AAIH,GApEQ,EAoEN,EApEM,CAAT;AAsEA,sBACI,+CACQvB,SADR;AAEI,IAAA,GAAG,EAAE,aAACwB,IAAD,EAAgB;AACjB;AACAvB,MAAAA,OAAO,CAACC,OAAR,GAAkBsB,IAAlB;AACH;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAlFe3B,e;;KAAAA,e","sourcesContent":["import {EditorConfig} from \"@editorjs/editorjs\";\r\nimport {ComponentProps, useEffect, useRef} from \"react\";\r\nimport {saveByUrl, saveImage} from \"../../services/api/PostApi\";\r\n\r\ninterface EditorJsWrapperProps extends ComponentProps<\"div\"> {\r\n    config?: EditorConfig;\r\n    blocks: Array<any>,\r\n}\r\n\r\nexport function EditorJsWrapper({config = {}, blocks, ...restProps}: EditorJsWrapperProps): JSX.Element {\r\n    const elmtRef = useRef<HTMLDivElement>();\r\n\r\n    useEffect(() => {\r\n        if (!elmtRef.current) {\r\n            return;\r\n        }\r\n\r\n        // @ts-ignore\r\n        let editorJs;\r\n\r\n        (async () => {\r\n            const {default: EditorJS} = await import(\"@editorjs/editorjs\");\r\n            // @ts-ignore\r\n            const {default: Header} = await import('@editorjs/header');\r\n            // @ts-ignore\r\n            const {default: ImageTool } = await import('@editorjs/image');\r\n\r\n            // @ts-ignore\r\n            const {default: Code } = await import('@editorjs/code');\r\n\r\n            // @ts-ignore\r\n            const {default: Quote } = await import('@editorjs/quote');\r\n\r\n            // @ts-ignore\r\n            const {default: List } = await import('@editorjs/list');\r\n\r\n            editorJs = new EditorJS({\r\n                ...config,\r\n                holder: elmtRef.current,\r\n                tools: {\r\n                    header: {\r\n                        class: Header,\r\n                        inlineToolbar: true,\r\n                        config: {\r\n                            placeholder: 'Введите заголовок'\r\n                        }\r\n                    },\r\n                    Code,\r\n                    Quote,\r\n                    List,\r\n                    image: {\r\n                        class: ImageTool,\r\n                        config: {\r\n                            uploader: {\r\n                                uploadByFile: async (image: File) => {\r\n                                    const data = await saveImage(image);\r\n                                    return data.data\r\n                                },\r\n                                uploadByUrl: async (url: string) => {\r\n                                   const data = await saveByUrl(url);\r\n                                   return data.data;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Previously saved data that should be rendered\r\n                 */\r\n                data: {\r\n                    blocks\r\n                },\r\n            });\r\n        })().catch((error): void => console.error(error));\r\n\r\n        return (): void => {\r\n            // @ts-ignore\r\n            editorJs.destroy();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            {...restProps}\r\n            ref={(elmt): void => {\r\n                // @ts-ignore\r\n                elmtRef.current = elmt;\r\n            }}\r\n        />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}