{"ast":null,"code":"import _regeneratorRuntime from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from '../../core/axios';\nexport var UserApi = {\n  login: function () {\n    var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n      var formData, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('email', email);\n              formData.append('password', password);\n              formData.append('remember', '1');\n              _context.next = 6;\n              return axios.post('/login', formData, {\n                maxRedirects: 0\n              });\n\n            case 6:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              return _context.abrupt(\"return\", data);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n  getMe: function () {\n    var _getMe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get('/api/user', {\n                headers: {\n                  Authorization: token ? \"Bearer \".concat(token) : ''\n                }\n              });\n\n            case 2:\n              _yield$axios$get = _context2.sent;\n              data = _yield$axios$get.data;\n              return _context2.abrupt(\"return\", data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getMe(_x3) {\n      return _getMe.apply(this, arguments);\n    }\n\n    return getMe;\n  }(),\n  show: function () {\n    var _show = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var _yield$axios$get2, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.get('/api/users/' + id);\n\n            case 2:\n              _yield$axios$get2 = _context3.sent;\n              data = _yield$axios$get2.data;\n              return _context3.abrupt(\"return\", data);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function show(_x4) {\n      return _show.apply(this, arguments);\n    }\n\n    return show;\n  }(),\n  updateProfile: function () {\n    var _updateProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n      var formData;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              formData = new FormData();\n              Object.keys(data).forEach(function (param) {\n                formData.append(param, data[param]);\n              });\n              _context4.next = 4;\n              return axios.post('/api/user', formData);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function updateProfile(_x5) {\n      return _updateProfile.apply(this, arguments);\n    }\n\n    return updateProfile;\n  }()\n};\nexport var getCookie = function getCookie() {\n  return axios.get('/sanctum/csrf-cookie');\n};","map":{"version":3,"sources":["C:/Projects/projects/frontend/services/api/UserApi.ts"],"names":["axios","UserApi","login","email","password","formData","FormData","append","post","maxRedirects","data","getMe","token","get","headers","Authorization","show","id","updateProfile","Object","keys","forEach","param","getCookie"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAGA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,KAAK;AAAA,0EAAE,iBAAOC,KAAP,EAAsBC,QAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCC,cAAAA,QADD,GACY,IAAIC,QAAJ,EADZ;AAELD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,KAAzB;AACAE,cAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BH,QAA5B;AACAC,cAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,GAA5B;AAJK;AAAA,qBAMkBP,KAAK,CAACQ,IAAN,CAAW,QAAX,EAAqBH,QAArB,EAA+B;AACpDI,gBAAAA,YAAY,EAAE;AADsC,eAA/B,CANlB;;AAAA;AAAA;AAMGC,cAAAA,IANH,qBAMGA,IANH;AAAA,+CAUEA,IAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADgB;AAcrBC,EAAAA,KAAK;AAAA,0EAAE,kBAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACkBZ,KAAK,CAACa,GAAN,CAAU,WAAV,EAAuB;AAC5CC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,EAAEH,KAAK,oBAAaA,KAAb,IAAuB;AADpC;AADmC,eAAvB,CADlB;;AAAA;AAAA;AACGF,cAAAA,IADH,oBACGA,IADH;AAAA,gDAMEA,IANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAdgB;AAuBrBM,EAAAA,IAAI;AAAA,yEAAE,kBAAOC,EAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACmBjB,KAAK,CAACa,GAAN,CAAU,gBAAgBI,EAA1B,CADnB;;AAAA;AAAA;AACIP,cAAAA,IADJ,qBACIA,IADJ;AAAA,gDAEGA,IAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvBiB;AA4BrBQ,EAAAA,aAAa;AAAA,kFAAE,kBAAOR,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPL,cAAAA,QADO,GACI,IAAIC,QAAJ,EADJ;AAGba,cAAAA,MAAM,CAACC,IAAP,CAAYV,IAAZ,EAAkBW,OAAlB,CAA0B,UAACC,KAAD,EAAW;AACnCjB,gBAAAA,QAAQ,CAACE,MAAT,CAAgBe,KAAhB,EAAuBZ,IAAI,CAACY,KAAD,CAA3B;AACD,eAFD;AAHa;AAAA,qBAMPtB,KAAK,CAACQ,IAAN,CAAW,WAAX,EAAwBH,QAAxB,CANO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA5BQ,CAAhB;AAyCP,OAAO,IAAMkB,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,SAAOvB,KAAK,CAACa,GAAN,CAAU,sBAAV,CAAP;AACD,CAFM","sourcesContent":["import axios from '../../core/axios';\r\nimport {User} from \"../../interfaces\";\r\n\r\nexport const UserApi = {\r\n  login: async (email: string, password: string): Promise<any> => {\r\n    const formData = new FormData();\r\n    formData.append('email', email);\r\n    formData.append('password', password);\r\n    formData.append('remember', '1');\r\n\r\n    const { data } = await axios.post('/login', formData, {\r\n      maxRedirects: 0,\r\n    });\r\n\r\n    return data;\r\n  },\r\n\r\n  getMe: async (token?: string) => {\r\n    const { data } = await axios.get('/api/user', {\r\n      headers: {\r\n        Authorization: token ? `Bearer ${token}` : ''\r\n      }\r\n    });\r\n    return data;\r\n  },\r\n\r\n  show: async (id: number) => {\r\n    const { data } = await axios.get('/api/users/' + id);\r\n    return data;\r\n  },\r\n\r\n  updateProfile: async (data: User) => {\r\n    const formData = new FormData();\r\n\r\n    Object.keys(data).forEach((param) => {\r\n      formData.append(param, data[param]);\r\n    })\r\n    await axios.post('/api/user', formData)\r\n\r\n  }\r\n\r\n\r\n};\r\n\r\nexport const getCookie = () => {\r\n  return axios.get('/sanctum/csrf-cookie');\r\n};\r\n"]},"metadata":{},"sourceType":"module"}