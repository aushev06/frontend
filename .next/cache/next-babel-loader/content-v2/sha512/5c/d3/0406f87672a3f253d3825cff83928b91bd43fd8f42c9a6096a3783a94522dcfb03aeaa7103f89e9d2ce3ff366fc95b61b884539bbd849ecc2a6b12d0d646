{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\pages\\\\tags\\\\[slug].tsx\";\nimport React, { useState } from 'react';\nimport { useAllMQ } from \"../../utils/useAllMQ\";\nimport { setLike } from \"../../services/api/LikeApi\";\nimport { MainLayout } from \"../../layouts/MainLayout\";\nimport { MiniPost } from \"../../components/MiniPost\";\nimport { getPosts } from \"../../services/api/PostApi\";\nimport { LoadMore } from \"../../components/LoadMore\";\nexport default function Home(props) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const mq = useAllMQ();\n\n  const handleSetLike = async (postId, like) => {\n    await setLike(postId, 'post', like);\n  };\n\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(props.posts);\n  const {\n    0: page,\n    1: setPage\n  } = useState(props.posts.meta.current_page);\n  const {\n    0: maxPage,\n    1: setMaxPage\n  } = useState(props.posts.meta.last_page);\n  React.useEffect(() => {\n    const runEffect = async () => {\n      setPosts(await getPosts({\n        page\n      }));\n    };\n\n    runEffect();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [!mq.isXS && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-side\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [isLoading && 'Загрука...', !isLoading && (posts === null || posts === void 0 ? void 0 : posts.data.map((post, key) => {\n            return /*#__PURE__*/_jsxDEV(MiniPost, {\n              postData: {\n                commentsCount: post.comments_count,\n                description: post.description,\n                dislikesCount: post.dislikes_count,\n                likesCount: post.likes_count,\n                title: post.title,\n                viewsCount: post.views,\n                slug: post.slug,\n                user: {\n                  avatarUrl: post.user.avatar,\n                  id: post.user.id,\n                  name: post.user.name\n                },\n                imageUrl: post.img,\n                id: post.id,\n                tags: [],\n                time: new Date(post.updated_at),\n                vote: post === null || post === void 0 ? void 0 : post.liked_type\n              },\n              onSetLike: handleSetLike\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 36\n            }, this);\n          })), !isLoading && page !== maxPage && /*#__PURE__*/_jsxDEV(LoadMore, {\n            onClick: () => setPage(page + 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), !mq.isXS && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-side\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\nexport async function getServerSideProps(ctx) {\n  var _ctx$query, _ctx$req$cookies;\n\n  const posts = await getPosts({\n    categories: (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.slug\n  }, (_ctx$req$cookies = ctx.req.cookies) === null || _ctx$req$cookies === void 0 ? void 0 : _ctx$req$cookies.auth_token);\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["C:/Projects/projects/frontend/pages/tags/[slug].tsx"],"names":["React","useState","useAllMQ","setLike","MainLayout","MiniPost","getPosts","LoadMore","Home","props","isLoading","setIsLoading","mq","handleSetLike","postId","like","posts","setPosts","page","setPage","meta","current_page","maxPage","setMaxPage","last_page","useEffect","runEffect","isXS","data","map","post","key","commentsCount","comments_count","description","dislikesCount","dislikes_count","likesCount","likes_count","title","viewsCount","views","slug","user","avatarUrl","avatar","id","name","imageUrl","img","tags","time","Date","updated_at","vote","liked_type","getServerSideProps","ctx","categories","query","req","cookies","auth_token"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useAllMQ} from \"../../utils/useAllMQ\";\r\nimport {setLike} from \"../../services/api/LikeApi\";\r\nimport {MainLayout} from \"../../layouts/MainLayout\";\r\nimport {MiniPost} from \"../../components/MiniPost\";\r\nimport {Pagination, PostData} from \"../../interfaces\";\r\nimport {getPosts, showPost} from \"../../services/api/PostApi\";\r\nimport {getCategories} from \"../../services/api/CategoryApi\";\r\nimport {LoadMore} from \"../../components/LoadMore\";\r\n\r\n\r\nexport default function Home(props) {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const mq = useAllMQ()\r\n\r\n    const handleSetLike = async (postId: number, like?: 'like' | 'dislike') => {\r\n        await setLike(postId, 'post', like)\r\n    }\r\n\r\n\r\n    const [posts, setPosts] = useState<Pagination<PostData>>(props.posts);\r\n    const [page, setPage] = useState(props.posts.meta.current_page)\r\n    const [maxPage, setMaxPage] = useState(props.posts.meta.last_page)\r\n\r\n\r\n    React.useEffect(() => {\r\n        const runEffect = async () => {\r\n            setPosts(await getPosts({page}))\r\n        }\r\n\r\n        runEffect();\r\n\r\n    }, [page])\r\n\r\n    return (\r\n        <main>\r\n            <MainLayout>\r\n                <div className=\"wrapper\">\r\n\r\n                    {!mq.isXS && (\r\n                        <div className=\"left-side\">\r\n\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                    <div className=\"content\">\r\n\r\n                        {isLoading && 'Загрука...'}\r\n\r\n                        {!isLoading && posts?.data.map((post, key) => {\r\n                            return <MiniPost\r\n                                key={post.id}\r\n                                postData={{\r\n                                    commentsCount: post.comments_count,\r\n                                    description: post.description,\r\n                                    dislikesCount: post.dislikes_count,\r\n                                    likesCount: post.likes_count,\r\n                                    title: post.title,\r\n                                    viewsCount: post.views,\r\n                                    slug: post.slug,\r\n                                    user: {\r\n                                        avatarUrl: post.user.avatar,\r\n                                        id: post.user.id,\r\n                                        name: post.user.name,\r\n                                    },\r\n                                    imageUrl: post.img,\r\n                                    id: post.id,\r\n                                    tags: [],\r\n                                    time: new Date(post.updated_at),\r\n                                    vote: post?.liked_type,\r\n                                }}\r\n                                onSetLike={handleSetLike}\r\n                            />;\r\n                        })}\r\n\r\n                        {!isLoading && page !== maxPage && (\r\n                            <LoadMore onClick={() => setPage(page + 1)}/>\r\n                        )}\r\n\r\n                    </div>\r\n                    {!mq.isXS && (\r\n                        <div className=\"right-side\">\r\n\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </MainLayout>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport async function getServerSideProps(ctx) {\r\n    const posts = await getPosts({categories: ctx.query?.slug}, ctx.req.cookies?.auth_token);\r\n\r\n    return {\r\n        props: {\r\n            posts\r\n        },\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}