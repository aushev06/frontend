{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\EditorBlock\\\\index.tsx\";\nimport { Typography } from \"@material-ui/core\";\nimport styles from './EditorBlock.module.scss';\nimport { EditorJsWrapper } from \"../Editor/Editor\";\nimport { useState } from \"react\";\nimport { savePost } from \"../../services/api/PostApi\";\nimport { Button } from \"../Button\";\nimport { useRouter } from 'next/router';\nimport { SelectCategory } from \"../SelectCategory\";\nexport function EditorBlock({\n  categories,\n  serverSidePost\n}) {\n  const router = useRouter();\n  const {\n    0: data,\n    1: setData\n  } = useState(serverSidePost ? serverSidePost.body : [{\n    \"type\": \"header\",\n    \"data\": {\n      \"text\": \"\",\n      \"level\": 2\n    }\n  }]);\n  const {\n    0: post,\n    1: setPost\n  } = useState(serverSidePost || null);\n  const {\n    0: category,\n    1: setCategory\n  } = useState((serverSidePost === null || serverSidePost === void 0 ? void 0 : serverSidePost.category) || categories[0]);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n\n  const handleSave = async status => {\n    setMessage('Сохранение...');\n\n    try {\n      const response = await savePost({\n        title: data[0].data.text,\n        body: data,\n        themes: [{\n          name: '#разработка',\n          id: 0\n        }],\n        status,\n        category,\n        id: post === null || post === void 0 ? void 0 : post.id\n      });\n      setPost(response.data);\n      setMessage('Сохранено в черновик...');\n    } catch (e) {\n      setMessage('Произошла ошибка');\n    }\n  };\n\n  const onSelectCategory = cat => {\n    setCategory(cat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: message.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.header_draftText,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: post === null,\n          onClick: () => router.push(`/post/${post.slug}`),\n          variant: 'outlined',\n          className: styles.eyes,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: '/eyes.svg'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleSave('draft'),\n          variant: 'outlined',\n          className: styles.saveDraftBtn,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleSave('active'),\n          variant: 'outlined',\n          className: styles.save,\n          children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectCategory, {\n      onSelect: onSelectCategory,\n      selectedCategory: category,\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(EditorJsWrapper, {\n      blocks: data,\n      config: {\n        async onChange(api) {\n          const getBlocks = async () => {\n            const blocks = await api.saver.save();\n            setData(blocks.blocks);\n          };\n\n          await getBlocks();\n        }\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/EditorBlock/index.tsx"],"names":["Typography","styles","EditorJsWrapper","useState","savePost","Button","useRouter","SelectCategory","EditorBlock","categories","serverSidePost","router","data","setData","body","post","setPost","category","setCategory","message","setMessage","handleSave","status","response","title","text","themes","name","id","e","onSelectCategory","cat","header","length","header_draftText","buttons","push","slug","eyes","saveDraftBtn","save","onChange","api","getBlocks","blocks","saver"],"mappings":"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","sourcesContent":["import {Typography} from \"@material-ui/core\";\r\nimport styles from './EditorBlock.module.scss'\r\nimport {EditorJsWrapper} from \"../Editor/Editor\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {savePost} from \"../../services/api/PostApi\";\r\nimport {Button} from \"../Button\";\r\nimport {useRouter} from 'next/router';\r\nimport {Category, PostData} from \"../../interfaces\";\r\nimport {SelectCategory} from \"../SelectCategory\";\r\n\r\ntype Props = {\r\n    categories: Category[],\r\n    serverSidePost?: PostData\r\n}\r\n\r\nexport function EditorBlock({ categories, serverSidePost }: Props) {\r\n    const router = useRouter();\r\n    const [data, setData] = useState<Array<any>>(serverSidePost ? serverSidePost.body : [\r\n        {\"type\": \"header\", \"data\": {\"text\": \"\", \"level\": 2}}\r\n    ]);\r\n\r\n    const [post, setPost] = useState<PostData>(serverSidePost || null);\r\n    const [category, setCategory] = useState<Category>(serverSidePost?.category || categories[0]);\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSave = async (status: string) => {\r\n        setMessage('Сохранение...')\r\n       try {\r\n           const response =  await savePost({\r\n               title: data[0].data.text as string,\r\n               body: data,\r\n               themes: [{name: '#разработка', id: 0}],\r\n               status,\r\n               category,\r\n               id: post?.id\r\n           });\r\n\r\n           setPost(response.data);\r\n           setMessage('Сохранено в черновик...')\r\n       } catch (e) {\r\n           setMessage('Произошла ошибка')\r\n       }\r\n\r\n    }\r\n\r\n    const onSelectCategory = (cat: Category) => {\r\n        setCategory(cat);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.header}>\r\n                <div>\r\n                    {message.length > 0 && <Typography className={styles.header_draftText}>{message}</Typography>}\r\n                </div>\r\n\r\n                <div className={styles.buttons}>\r\n                    <Button disabled={post === null} onClick={() => router.push(`/post/${post.slug}`)} variant={'outlined'} className={styles.eyes}>\r\n                        <img src={'/eyes.svg'}/>\r\n                    </Button>\r\n\r\n                    <Button onClick={() => handleSave('draft')} variant={'outlined'} className={styles.saveDraftBtn}>\r\n                        Сохранить\r\n                    </Button>\r\n\r\n                    <Button onClick={() => handleSave('active')} variant={'outlined'} className={styles.save}>\r\n                        Опубликовать\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n           <SelectCategory onSelect={onSelectCategory} selectedCategory={category} categories={categories} />\r\n\r\n            <EditorJsWrapper\r\n                blocks={data}\r\n                config={{\r\n                async onChange(api): Promise<void> {\r\n                    const getBlocks = async () => {\r\n                        const blocks = await api.saver.save();\r\n                        setData(blocks.blocks)\r\n                    }\r\n                    await getBlocks();\r\n                }\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}