{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\SearchPopup\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './SearchPopup.module.scss';\nimport Item from './Item';\nimport { getSpecialists } from \"../../services/api/SpecialistsApi\";\nimport { useSelector } from \"react-redux\";\nimport { selectThemesState } from \"../../redux/directory/directory.selector\";\nvar mockup = {\n  authors: [{\n    id: 1,\n    name: 'Харца Лелович'\n  }, {\n    id: 2,\n    name: 'Нахал Ещетотович'\n  }],\n  articles: [{\n    id: 3,\n    name: 'Соха-подкаст на Ingternet'\n  }, {\n    id: 4,\n    name: 'Ха ха ха, говорю я всем, кому не смешно!'\n  }, {\n    id: 5,\n    name: 'Я сижу на кухне, хаваю борщь'\n  }, {\n    id: 6,\n    name: 'Я сижу на кухне, хаваю борщь'\n  }],\n  tags: [{\n    id: 7,\n    name: 'Соха-подкаст на Ingternet'\n  }],\n  comments: [{\n    id: 8,\n    name: 'Соха-подкаст на Ingternet'\n  }],\n  podcasts: []\n};\n\nvar SearchPopup = function SearchPopup(_ref) {\n  _s();\n\n  var isSearch = _ref.isSearch,\n      searchInput = _ref.searchInput;\n\n  var _useState = useState(mockup),\n      searchData = _useState[0],\n      setSearchData = _useState[1];\n\n  var _useState2 = useState([]),\n      authors = _useState2[0],\n      setAuthors = _useState2[1];\n\n  var _useState3 = useState([]),\n      posts = _useState3[0],\n      setPosts = _useState3[1];\n\n  var _useState4 = useState([]),\n      comments = _useState4[0],\n      setComments = _useState4[1];\n\n  var themes = useSelector(selectThemesState).filter(function (theme) {\n    return theme.name.includes(searchInput);\n  });\n  if (isSearch && searchData.articles.length === 0) return null;\n  React.useEffect(function () {\n    getSpecialists({\n      name: searchInput\n    }).then(function (users) {\n      setAuthors(users.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        title: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\",\n        data: authors.map(function (user) {\n          return {\n            id: user.id,\n            name: user.name,\n            link: \"/profile/\".concat(user.id)\n          };\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Item, {\n        title: \"\\u041F\\u0443\\u0431\\u043B\\u0438\\u043A\\u0430\\u0446\\u0438\\u0438\",\n        data: searchData.articles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Item, {\n        title: \"\\u0422\\u044D\\u0433\\u0438\",\n        data: themes.map(function (theme) {\n          return {\n            id: theme.id,\n            name: theme.name,\n            link: '/themes'\n          };\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Item, {\n        title: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\",\n        data: searchData.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Item, {\n        title: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\",\n        data: searchData.podcasts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.footer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"mr-10\",\n        src: \"/arrow-link.svg\",\n        alt: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B \\u043F\\u043E \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u0443 \\u201C\", searchInput, \"\\u201D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SearchPopup, \"4on/PvfK5HmURzN4+IKOENv23+E=\", false, function () {\n  return [useSelector];\n});\n\n_c = SearchPopup;\nexport default SearchPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPopup\");","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/SearchPopup/index.tsx"],"names":["React","useState","styles","Item","getSpecialists","useSelector","selectThemesState","mockup","authors","id","name","articles","tags","comments","podcasts","SearchPopup","isSearch","searchInput","searchData","setSearchData","setAuthors","posts","setPosts","setComments","themes","filter","theme","includes","length","useEffect","then","users","data","container","body","map","user","link","footer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,cAAR,QAA6B,mCAA7B;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,iBAAR,QAAgC,0CAAhC;AAMA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADO,EAKP;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALO,CADI;AAWbC,EAAAA,QAAQ,EAAE,CACR;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADQ,EAKR;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALQ,EASR;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GATQ,EAaR;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GAbQ,CAXG;AA6BbE,EAAAA,IAAI,EAAE,CACJ;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADI,CA7BO;AAmCbG,EAAAA,QAAQ,EAAE,CACR;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADQ,CAnCG;AAyCbI,EAAAA,QAAQ,EAAE;AAzCG,CAAf;;AA4CA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAA+B;AAAA;;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,kBACzChB,QAAQ,CAACM,MAAD,CADiC;AAAA,MACtEW,UADsE;AAAA,MAC1DC,aAD0D;;AAAA,mBAE/ClB,QAAQ,CAAS,EAAT,CAFuC;AAAA,MAEtEO,OAFsE;AAAA,MAE7DY,UAF6D;;AAAA,mBAGnDnB,QAAQ,CAAa,EAAb,CAH2C;AAAA,MAGtEoB,KAHsE;AAAA,MAG/DC,QAH+D;;AAAA,mBAI7CrB,QAAQ,CAAY,EAAZ,CAJqC;AAAA,MAItEY,QAJsE;AAAA,MAI5DU,WAJ4D;;AAK7E,MAAMC,MAAM,GAAGnB,WAAW,CAACC,iBAAD,CAAX,CAA+BmB,MAA/B,CAAsC,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAAChB,IAAN,CAAWiB,QAAX,CAAoBV,WAApB,CAAJ;AAAA,GAA3C,CAAf;AAEA,MAAID,QAAQ,IAAIE,UAAU,CAACP,QAAX,CAAoBiB,MAApB,KAA+B,CAA/C,EAAkD,OAAO,IAAP;AAElD5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,YAAM;AACpBzB,IAAAA,cAAc,CAAC;AAACM,MAAAA,IAAI,EAAEO;AAAP,KAAD,CAAd,CAAoCa,IAApC,CAAyC,UAAAC,KAAK,EAAI;AAChDX,MAAAA,UAAU,CAACW,KAAK,CAACC,IAAP,CAAV;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,sBACE;AAAK,IAAA,SAAS,EAAE9B,MAAM,CAAC+B,SAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE/B,MAAM,CAACgC,IAAvB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,sCAAZ;AAAqB,QAAA,IAAI,EAAE1B,OAAO,CAAC2B,GAAR,CAAY,UAAAC,IAAI;AAAA,iBAAK;AAC9C3B,YAAAA,EAAE,EAAE2B,IAAI,CAAC3B,EADqC;AAE9CC,YAAAA,IAAI,EAAE0B,IAAI,CAAC1B,IAFmC;AAG9C2B,YAAAA,IAAI,qBAAcD,IAAI,CAAC3B,EAAnB;AAH0C,WAAL;AAAA,SAAhB;AAA3B;AAAA;AAAA;AAAA;AAAA,eADF,eAME,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,8DAAZ;AAAyB,QAAA,IAAI,EAAES,UAAU,CAACP;AAA1C;AAAA;AAAA;AAAA;AAAA,eANF,eAOE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,0BAAZ;AAAmB,QAAA,IAAI,EAAEa,MAAM,CAACW,GAAP,CAAW,UAAAT,KAAK;AAAA,iBAAK;AAC5CjB,YAAAA,EAAE,EAAEiB,KAAK,CAACjB,EADkC;AAE5CC,YAAAA,IAAI,EAAEgB,KAAK,CAAChB,IAFgC;AAG5C2B,YAAAA,IAAI,EAAE;AAHsC,WAAL;AAAA,SAAhB;AAAzB;AAAA;AAAA;AAAA;AAAA,eAPF,eAYE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,8DAAZ;AAAyB,QAAA,IAAI,EAAEnB,UAAU,CAACL;AAA1C;AAAA;AAAA;AAAA;AAAA,eAZF,eAaE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,sCAAZ;AAAqB,QAAA,IAAI,EAAEK,UAAU,CAACJ;AAAtC;AAAA;AAAA;AAAA;AAAA,eAbF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAgBE;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACoC,MAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAC,iBAA3B;AAA6C,QAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA,sNAAwCrB,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAuBD,CAtCD;;GAAMF,W;UAKWV,W;;;KALXU,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport styles from './SearchPopup.module.scss';\r\nimport Item from './Item';\r\nimport {getSpecialists} from \"../../services/api/SpecialistsApi\";\r\nimport {PostData, Theme, User} from \"../../interfaces\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectThemesState} from \"../../redux/directory/directory.selector\";\r\ninterface SearchPopupProps {\r\n  isSearch: boolean;\r\n  searchInput: string;\r\n}\r\n\r\nconst mockup = {\r\n  authors: [\r\n    {\r\n      id: 1,\r\n      name: 'Харца Лелович',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Нахал Ещетотович',\r\n    },\r\n  ],\r\n  articles: [\r\n    {\r\n      id: 3,\r\n      name: 'Соха-подкаст на Ingternet',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Ха ха ха, говорю я всем, кому не смешно!',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Я сижу на кухне, хаваю борщь',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Я сижу на кухне, хаваю борщь',\r\n    },\r\n  ],\r\n  tags: [\r\n    {\r\n      id: 7,\r\n      name: 'Соха-подкаст на Ingternet',\r\n    },\r\n  ],\r\n  comments: [\r\n    {\r\n      id: 8,\r\n      name: 'Соха-подкаст на Ingternet',\r\n    },\r\n  ],\r\n  podcasts: [],\r\n};\r\n\r\nconst SearchPopup: React.FC<SearchPopupProps> = ({ isSearch, searchInput }) => {\r\n  const [searchData, setSearchData] = useState(mockup);\r\n  const [authors, setAuthors] = useState<User[]>([])\r\n  const [posts, setPosts] = useState<PostData[]>([])\r\n  const [comments, setComments] = useState<Comment[]>([])\r\n  const themes = useSelector(selectThemesState).filter(theme => theme.name.includes(searchInput));\r\n\r\n  if (isSearch && searchData.articles.length === 0) return null;\r\n\r\n  React.useEffect(() => {\r\n    getSpecialists({name: searchInput}).then(users => {\r\n      setAuthors(users.data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.body}>\r\n        <Item title=\"Авторы\" data={authors.map(user => ({\r\n          id: user.id,\r\n          name: user.name,\r\n          link: `/profile/${user.id}`\r\n        }))} />\r\n        <Item title=\"Публикации\" data={searchData.articles} />\r\n        <Item title=\"Тэги\" data={themes.map(theme => ({\r\n          id: theme.id,\r\n          name: theme.name,\r\n          link: '/themes'\r\n        }))} />\r\n        <Item title=\"Коментарии\" data={searchData.comments} />\r\n        <Item title=\"Авторы\" data={searchData.podcasts} />\r\n      </div>\r\n      <div className={styles.footer}>\r\n        <img className=\"mr-10\" src=\"/arrow-link.svg\" alt=\"Поиск\" />\r\n        <a>Показать все результаты по запросу “{searchInput}”</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPopup;\r\n"]},"metadata":{},"sourceType":"module"}