{"ast":null,"code":"import axios from '../../core/axios';\nexport const saveImage = image => {\n  const formData = new FormData();\n  formData.append('image', image);\n  return axios.post('/api/posts/image-by-url', formData);\n};\nexport const savePost = async (postData) => {\n  let body = {\n    body: postData.body,\n    title: postData.title,\n    description: 'Test',\n    themes: postData.themes || [],\n    status: postData === null || postData === void 0 ? void 0 : postData.status,\n    category: postData.category\n  };\n\n  if (postData !== null && postData !== void 0 && postData.id) {\n    const {\n      data\n    } = await axios.put(`/api/posts/${postData.id}`, body);\n    return data;\n  } else {\n    const {\n      data\n    } = await axios.post(`/api/posts`, body);\n    return data;\n  }\n};\nexport const getPosts = async (params = {}, token) => {\n  const {\n    data\n  } = await axios.get('/api/posts', {\n    params,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : ''\n    }\n  });\n  return data;\n};\nexport const getThemes = async () => {\n  const {\n    data\n  } = await axios.get('/api/posts/themes');\n  return data;\n};\nexport const saveByUrl = async url => {\n  return await axios.post('/api/posts/image-by-url', {\n    url\n  });\n};\nexport const showPost = async (slug, token) => {\n  const {\n    data\n  } = await axios.get(`/api/posts/${slug}`, {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : ''\n    }\n  });\n  return data;\n};\nexport const getPostComments = async (id, apiToken) => {\n  const {\n    data\n  } = await axios.get(`/api/posts/${id}/comments`, {\n    headers: {\n      Authorization: apiToken ? `Bearer ${apiToken}` : ''\n    }\n  });\n  console.log(apiToken);\n  return data;\n};","map":{"version":3,"sources":["C:/Projects/projects/frontend/services/api/PostApi.ts"],"names":["axios","saveImage","image","formData","FormData","append","post","savePost","postData","body","title","description","themes","status","category","id","data","put","getPosts","params","token","get","headers","Authorization","getThemes","saveByUrl","url","showPost","slug","getPostComments","apiToken","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAIA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAiB;AACtC,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB;AACA,SAAOF,KAAK,CAACM,IAAN,CAAW,yBAAX,EAAsCH,QAAtC,CAAP;AACH,CAJM;AAMP,OAAO,MAAMI,QAAQ,GAAG,OAAOC,QAAP,KAOlB;AACF,MAAIC,IAAI,GAAG;AACPA,IAAAA,IAAI,EAAED,QAAQ,CAACC,IADR;AAEPC,IAAAA,KAAK,EAAEF,QAAQ,CAACE,KAFT;AAGPC,IAAAA,WAAW,EAAE,MAHN;AAIPC,IAAAA,MAAM,EAAEJ,QAAQ,CAACI,MAAT,IAAmB,EAJpB;AAKPC,IAAAA,MAAM,EAAEL,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEK,MALX;AAMPC,IAAAA,QAAQ,EAAEN,QAAQ,CAACM;AANZ,GAAX;;AASA,MAAIN,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEO,EAAd,EAAkB;AACd,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAW,cAAaT,QAAQ,CAACO,EAAG,EAApC,EAAuCN,IAAvC,CAArB;AACA,WAAOO,IAAP;AAEH,GAJD,MAIO;AACH,UAAM;AAACA,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACM,IAAN,CAAY,YAAZ,EAAyBG,IAAzB,CAArB;AACA,WAAOO,IAAP;AACH;AACJ,CAzBM;AA2BP,OAAO,MAAME,QAAQ,GAAG,OAAOC,MAAM,GAAG,EAAhB,EAAoBC,KAApB,KAA4D;AAChF,QAAM;AAACJ,IAAAA;AAAD,MAAS,MAAMhB,KAAK,CAACqB,GAAN,CAAU,YAAV,EAAwB;AACzCF,IAAAA,MADyC;AAEzCG,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADtC;AAFgC,GAAxB,CAArB;AAOA,SAAOJ,IAAP;AACH,CATM;AAWP,OAAO,MAAMQ,SAAS,GAAG,YAA8B;AACnD,QAAM;AAACR,IAAAA;AAAD,MAAS,MAAMhB,KAAK,CAACqB,GAAN,CAAU,mBAAV,CAArB;AAEA,SAAOL,IAAP;AACH,CAJM;AAMP,OAAO,MAAMS,SAAS,GAAG,MAAOC,GAAP,IAAuB;AAC5C,SAAO,MAAM1B,KAAK,CAACM,IAAN,CAAW,yBAAX,EAAsC;AAACoB,IAAAA;AAAD,GAAtC,CAAb;AACH,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,OAAOC,IAAP,EAAqBR,KAArB,KAAwC;AAC5D,QAAM;AAACJ,IAAAA;AAAD,MAAS,MAAMhB,KAAK,CAACqB,GAAN,CAAW,cAAaO,IAAK,EAA7B,EAAgC;AACjDN,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADtC;AADwC,GAAhC,CAArB;AAKA,SAAOJ,IAAP;AACH,CAPM;AASP,OAAO,MAAMa,eAAe,GAAG,OAAOd,EAAP,EAAmBe,QAAnB,KAAyC;AACpE,QAAM;AAACd,IAAAA;AAAD,MAAS,MAAMhB,KAAK,CAACqB,GAAN,CAAW,cAAaN,EAAG,WAA3B,EAAuC;AACxDO,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEO,QAAQ,GAAI,UAASA,QAAS,EAAtB,GAA0B;AAD5C;AAD+C,GAAvC,CAArB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SAAOd,IAAP;AACH,CATM","sourcesContent":["import axios from '../../core/axios';\r\nimport {Category, PostData, Theme} from '../../interfaces';\r\nimport {getCookie} from './UserApi';\r\n\r\nexport const saveImage = (image: File) => {\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n    return axios.post('/api/posts/image-by-url', formData);\r\n};\r\n\r\nexport const savePost = async (postData: {\r\n    title: string;\r\n    body: any;\r\n    themes?: Theme[],\r\n    status?: string,\r\n    category?: Category,\r\n    id?: number,\r\n}) => {\r\n    let body = {\r\n        body: postData.body,\r\n        title: postData.title,\r\n        description: 'Test',\r\n        themes: postData.themes || [],\r\n        status: postData?.status,\r\n        category: postData.category,\r\n    };\r\n\r\n    if (postData?.id) {\r\n        const {data} = await axios.put(`/api/posts/${postData.id}`, body);\r\n        return data\r\n\r\n    } else {\r\n        const {data} = await axios.post(`/api/posts`, body);\r\n        return data\r\n    }\r\n};\r\n\r\nexport const getPosts = async (params = {}, token?: string): Promise<PostData[]> => {\r\n    const {data} = await axios.get('/api/posts', {\r\n        params,\r\n        headers: {\r\n            Authorization: token ? `Bearer ${token}` : ''\r\n        }\r\n    });\r\n\r\n    return data;\r\n};\r\n\r\nexport const getThemes = async (): Promise<Theme[]> => {\r\n    const {data} = await axios.get('/api/posts/themes');\r\n\r\n    return data;\r\n};\r\n\r\nexport const saveByUrl = async (url: string) => {\r\n    return await axios.post('/api/posts/image-by-url', {url});\r\n};\r\n\r\nexport const showPost = async (slug: string, token?: string) => {\r\n    const {data} = await axios.get(`/api/posts/${slug}`, {\r\n        headers: {\r\n            Authorization: token ? `Bearer ${token}` : ''\r\n        }\r\n    });\r\n    return data;\r\n};\r\n\r\nexport const getPostComments = async (id: number, apiToken?: string) => {\r\n    const {data} = await axios.get(`/api/posts/${id}/comments`, {\r\n        headers: {\r\n            Authorization: apiToken ? `Bearer ${apiToken}` : ''\r\n        }\r\n    })\r\n    console.log(apiToken)\r\n\r\n    return data;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}