{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\projects\\\\frontend\\\\components\\\\AddCommentBlock\\\\index.tsx\";\nimport React, { useState } from \"react\";\nimport styles from './CommentBlock.module.scss';\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nexport const AddCommentBlock = ({\n  onAddComment,\n  toUser,\n  parentComment,\n  comment\n}) => {\n  const {\n    0: isClicked,\n    1: setIsClicked\n  } = useState(false);\n  const {\n    0: text,\n    1: setText\n  } = useState(toUser ? `@${toUser.name},` : '');\n\n  const handleAddComment = () => {\n    onAddComment(text, toUser === null || toUser === void 0 ? void 0 : toUser.id, (parentComment === null || parentComment === void 0 ? void 0 : parentComment.parent_id) || (parentComment === null || parentComment === void 0 ? void 0 : parentComment.id), comment === null || comment === void 0 ? void 0 : comment.id);\n    setText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.comment,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onFocus: () => setIsClicked(true),\n      classes: {\n        root: styles.fieldRoot\n      },\n      multiline: true,\n      placeholder: 'Написать комментарий...',\n      fullWidth: true,\n      minRows: !isClicked ? 1 : 5,\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), isClicked && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAddComment,\n      color: 'secondary',\n      className: styles.addButton,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Projects/projects/frontend/components/AddCommentBlock/index.tsx"],"names":["React","useState","styles","Input","Button","AddCommentBlock","onAddComment","toUser","parentComment","comment","isClicked","setIsClicked","text","setText","name","handleAddComment","id","parent_id","root","fieldRoot","e","target","value","addButton"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AASA,OAAO,MAAMC,eAAgC,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA,aAAxB;AAAuCC,EAAAA;AAAvC,CAAD,KAAsD;AAClG,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACW,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAACM,MAAM,GAAI,IAAGA,MAAM,CAACO,IAAK,GAAnB,GAAwB,EAA/B,CAAhC;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BT,IAAAA,YAAY,CAACM,IAAD,EAAOL,MAAP,aAAOA,MAAP,uBAAOA,MAAM,CAAES,EAAf,EAAmB,CAAAR,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAES,SAAf,MAA4BT,aAA5B,aAA4BA,aAA5B,uBAA4BA,aAAa,CAAEQ,EAA3C,CAAnB,EAAkEP,OAAlE,aAAkEA,OAAlE,uBAAkEA,OAAO,CAAEO,EAA3E,CAAZ;AACAH,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACO,OAAvB;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,OAAO,EAAE,MAAME,YAAY,CAAC,IAAD,CAD/B;AAEI,MAAA,OAAO,EAAE;AAACO,QAAAA,IAAI,EAAEhB,MAAM,CAACiB;AAAd,OAFb;AAEuC,MAAA,SAAS,MAFhD;AAEiD,MAAA,WAAW,EAAE,yBAF9D;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,OAAO,EAAE,CAACT,SAAD,GAAa,CAAb,GAAiB,CAJ9B;AAKI,MAAA,QAAQ,EAAEU,CAAC,IAAIP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAL1B;AAMI,MAAA,KAAK,EAAEV;AANX;AAAA;AAAA;AAAA;AAAA,YADJ,EAUKF,SAAS,iBAAI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,gBAAjB;AAAmC,MAAA,KAAK,EAAE,WAA1C;AAAuD,MAAA,SAAS,EAAEb,MAAM,CAACqB,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAvBM","sourcesContent":["import React, {useState} from \"react\";\r\nimport styles from './CommentBlock.module.scss';\r\nimport Input from \"@mui/material/Input\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Comment, User} from \"../../interfaces\";\r\n\r\ntype Props = {\r\n    onAddComment: (data: string, userId?: number, parentCommentId?: number) => void;\r\n    toUser?: User;\r\n    parentComment?: Comment;\r\n    comment?: Comment;\r\n}\r\nexport const AddCommentBlock: React.FC<Props> = ({ onAddComment, toUser, parentComment, comment }) => {\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const [text, setText] = useState(toUser ? `@${toUser.name},` : '');\r\n\r\n    const handleAddComment = () => {\r\n        onAddComment(text, toUser?.id, parentComment?.parent_id || parentComment?.id, comment?.id)\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <div className={styles.comment}>\r\n            <Input\r\n                onFocus={() => setIsClicked(true)}\r\n                classes={{root: styles.fieldRoot}} multiline placeholder={'Написать комментарий...'}\r\n                fullWidth\r\n                minRows={!isClicked ? 1 : 5}\r\n                onChange={e => setText(e.target.value)}\r\n                value={text}\r\n            />\r\n\r\n            {isClicked && <Button onClick={handleAddComment} color={'secondary'} className={styles.addButton}>Отправить</Button>}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}