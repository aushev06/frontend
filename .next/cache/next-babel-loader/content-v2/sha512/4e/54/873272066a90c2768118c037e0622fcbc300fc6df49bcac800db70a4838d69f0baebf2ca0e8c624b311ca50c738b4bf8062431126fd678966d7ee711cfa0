{"ast":null,"code":"import _regeneratorRuntime from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Projects/projects/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from '../../core/axios';\nexport var CommentApi = {\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/api/comments');\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              return _context.abrupt(\"return\", data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function get() {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  save: function () {\n    var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(postId, text, toUserId, parentCommentId, commentId) {\n      var body, _yield$axios$put, _data, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              body = {\n                post_id: postId,\n                text: text,\n                user_reply_id: toUserId,\n                parent_id: parentCommentId\n              };\n\n              if (!commentId) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 4;\n              return axios.put(\"/api/comments/\".concat(commentId), body);\n\n            case 4:\n              _yield$axios$put = _context2.sent;\n              _data = _yield$axios$put.data;\n              return _context2.abrupt(\"return\", _data);\n\n            case 7:\n              _context2.next = 9;\n              return axios.post(\"/api/comments\", body);\n\n            case 9:\n              _yield$axios$post = _context2.sent;\n              data = _yield$axios$post.data;\n              return _context2.abrupt(\"return\", data);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function save(_x, _x2, _x3, _x4, _x5) {\n      return _save.apply(this, arguments);\n    }\n\n    return save;\n  }()\n};","map":{"version":3,"sources":["C:/Projects/projects/frontend/services/api/CommentApi.ts"],"names":["axios","CommentApi","get","data","save","postId","text","toUserId","parentCommentId","commentId","body","post_id","user_reply_id","parent_id","put","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAIA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,GAAG;AAAA,wEAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBF,KAAK,CAACE,GAAN,CAAU,eAAV,CADpB;;AAAA;AAAA;AACKC,cAAAA,IADL,oBACKA,IADL;AAAA,+CAGIA,IAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADqB;AAOxBC,EAAAA,IAAI;AAAA,yEAAE,kBAAOC,MAAP,EAAuBC,IAAvB,EAAqCC,QAArC,EAAwDC,eAAxD,EAAkFC,SAAlF;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,IADF,GACS;AACXC,gBAAAA,OAAO,EAAEN,MADE;AAEXC,gBAAAA,IAAI,EAAJA,IAFW;AAGXM,gBAAAA,aAAa,EAAEL,QAHJ;AAIXM,gBAAAA,SAAS,EAAEL;AAJA,eADT;;AAAA,mBAQAC,SARA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBASqBT,KAAK,CAACc,GAAN,yBAA2BL,SAA3B,GAAwCC,IAAxC,CATrB;;AAAA;AAAA;AASMP,cAAAA,KATN,oBASMA,IATN;AAAA,gDAWKA,KAXL;;AAAA;AAAA;AAAA,qBAcmBH,KAAK,CAACe,IAAN,kBAA4BL,IAA5B,CAdnB;;AAAA;AAAA;AAcIP,cAAAA,IAdJ,qBAcIA,IAdJ;AAAA,gDAgBGA,IAhBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPoB,CAAnB","sourcesContent":["import axios from '../../core/axios';\r\nimport { Comment } from '../../interfaces';\r\n\r\n\r\nexport const CommentApi = {\r\n  get: async (): Promise<Comment[]> => {\r\n    const { data } = await axios.get('/api/comments');\r\n\r\n    return data;\r\n  },\r\n\r\n  save: async (postId: number, text: string, toUserId?: number, parentCommentId?: number, commentId?: number) => {\r\n    const body = {\r\n      post_id: postId,\r\n      text,\r\n      user_reply_id: toUserId,\r\n      parent_id: parentCommentId\r\n    };\r\n\r\n    if (commentId) {\r\n      const { data } = await axios.put(`/api/comments/${commentId}`, body);\r\n\r\n      return data\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/comments`, body);\r\n\r\n    return data\r\n  }\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}