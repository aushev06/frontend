{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { HYDRATE } from \"next-redux-wrapper\";\nexport const directorySlice = createSlice({\n  name: 'directory',\n  initialState: {\n    data: {\n      categories: [],\n      themes: []\n    }\n  },\n  reducers: {\n    setDirectories: (state, action) => {\n      state.data.categories = action.payload.categories;\n      state.data.themes = action.payload.themes;\n      return state;\n    }\n  },\n  extraReducers: {\n    [HYDRATE]: (state, action) => {\n      return _objectSpread(_objectSpread({}, state), action.payload.directory);\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  setDirectories\n} = directorySlice.actions;\nexport const {\n  reducer: directoryReducer\n} = directorySlice;","map":{"version":3,"sources":["C:/Projects/projects/frontend/redux/directory/slice.ts"],"names":["createSlice","HYDRATE","directorySlice","name","initialState","data","categories","themes","reducers","setDirectories","state","action","payload","extraReducers","directory","actions","reducer","directoryReducer"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAEA,OAAO,MAAMC,cAAc,GAAGF,WAAW,CAAC;AACtCG,EAAAA,IAAI,EAAE,WADgC;AAEtCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAE,EADV;AAEFC,MAAAA,MAAM,EAAE;AAFN;AADI,GAFwB;AAQtCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACL,IAAN,CAAWC,UAAX,GAAwBK,MAAM,CAACC,OAAP,CAAeN,UAAvC;AACAI,MAAAA,KAAK,CAACL,IAAN,CAAWE,MAAX,GAAoBI,MAAM,CAACC,OAAP,CAAeL,MAAnC;AACA,aAAOG,KAAP;AACH;AALK,GAR4B;AAgBtCG,EAAAA,aAAa,EAAE;AACX,KAACZ,OAAD,GAAW,CAACS,KAAD,EAAQC,MAAR,KAAmB;AAC1B,6CACOD,KADP,GAEOC,MAAM,CAACC,OAAP,CAAeE,SAFtB;AAIH;AANU;AAhBuB,CAAD,CAAlC,C,CA2BP;;AACA,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAAqBP,cAAc,CAACa,OAA1C;AACP,OAAO,MAAM;AAAEC,EAAAA,OAAO,EAAEC;AAAX,IAAgCf,cAAtC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {HYDRATE} from \"next-redux-wrapper\";\r\n\r\nexport const directorySlice = createSlice({\r\n    name: 'directory',\r\n    initialState: {\r\n        data: {\r\n            categories: [],\r\n            themes: [],\r\n        }\r\n    },\r\n    reducers: {\r\n        setDirectories: (state, action) => {\r\n            state.data.categories = action.payload.categories;\r\n            state.data.themes = action.payload.themes;\r\n            return state;\r\n        },\r\n    },\r\n\r\n    extraReducers: {\r\n        [HYDRATE]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                ...action.payload.directory,\r\n            };\r\n        },\r\n    },\r\n\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setDirectories } = directorySlice.actions;\r\nexport const { reducer: directoryReducer } = directorySlice;\r\n"]},"metadata":{},"sourceType":"module"}